(window.webpackJsonp=window.webpackJsonp||[]).push([[368],{1053:function(t,s,a){"use strict";a.r(s);var n=a(19),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"锚点（anchors-：字符串开始-和末尾"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#锚点（anchors-：字符串开始-和末尾","aria-hidden":"true"}},[t._v("#")]),t._v(" 锚点（Anchors)：字符串开始 ^ 和末尾 $")]),t._v(" "),a("p",[t._v("插入符号 "),a("code",{staticClass:"pattern"},[t._v("^")]),t._v(" 和美元符号 "),a("code",{staticClass:"pattern"},[t._v("$")]),t._v(" 在正则表达式中具有特殊的意义。它们被称为“锚点”。")]),t._v(" "),a("p",[t._v("插入符号 "),a("code",{staticClass:"pattern"},[t._v("^")]),t._v(" 匹配文本开头，而美元符号 "),a("code",{staticClass:"pattern"},[t._v("$")]),t._v(" － 则匹配文本末尾。")]),t._v(" "),a("br"),t._v(" "),a("p",[t._v("举个例子，让我们测试一下文本是否以 "),a("code",[t._v("Mary")]),t._v(" 开头：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Mary had a little lamb"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/^Mary/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("该模式 "),a("code",{staticClass:"pattern"},[t._v("^Mary")]),t._v(" 的意思是：字符串开始，接着是 “Mary”。")]),t._v(" "),a("p",[t._v("与此类似，我们可以用 "),a("code",{staticClass:"pattern"},[t._v("snow$")]),t._v(" 来测试文本是否以 "),a("code",[t._v("snow")]),t._v(" 结尾:")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"it\'s fleece was white as snow"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/snow$/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("在以上这些具体的例子中我们实际上可以用 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith",target:"_blank",rel:"noopener noreferrer"}},[t._v("startsWith"),a("OutboundLink")],1),t._v("/"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith",target:"_blank",rel:"noopener noreferrer"}},[t._v("endsWith"),a("OutboundLink")],1),t._v(" 来代替。正则表达式应该被用于更加复杂的测试中。")]),t._v(" "),a("br"),t._v(" "),a("br"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"测试完全匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试完全匹配","aria-hidden":"true"}},[t._v("#")]),t._v(" 测试完全匹配")]),t._v(" "),a("p",[t._v("这两个锚点 "),a("code",{staticClass:"pattern"},[t._v("^...$")]),t._v(" 放在一起常常被用于测试一个字符串是否完全匹配一个模式。比如，测试用户的输入是否符合正确的格式。")]),t._v(" "),a("p",[t._v("让我们测试一下一个字符串是否属于 "),a("code",[t._v("12:34")]),t._v(" 格式的时间。即，两个数字，然后一个冒号，接着是另外两个数字。")]),t._v(" "),a("p",[t._v("用正则表达式来表示就是 "),a("code",{staticClass:"pattern"},[t._v("\\d\\d:\\d\\d")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" goodInput "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"12:34"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" badInput "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"12:345"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" regexp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/^\\d\\d:\\d\\d$/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" regexp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("goodInput"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" regexp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("badInput"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("在这个例子中 "),a("code",{staticClass:"pattern"},[t._v("\\d\\d:\\d\\d")]),t._v(" 所对应的匹配文本必须正好在文本开头 "),a("code",{staticClass:"pattern"},[t._v("^")]),t._v(" 之后，而在这之后必须紧跟文本末尾 "),a("code",{staticClass:"pattern"},[t._v("$")]),t._v("。")]),t._v(" "),a("p",[t._v("整个字符串必须准确地符合这一个格式。如果其中有任何偏差或者额外的字符，结果将为 "),a("code",[t._v("false")]),t._v("。")]),t._v(" "),a("p",[t._v("当修饰符 "),a("code",{staticClass:"pattern"},[t._v("m")]),t._v(" 出现时，锚点将会有不同的行为。我们将在后面学习到。")]),t._v(" "),a("br"),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",[a("strong",[t._v("锚点具有“零宽度”")])]),t._v(" "),a("p",[t._v("锚点 "),a("code",{staticClass:"pattern"},[t._v("^")]),t._v(" 和 "),a("code",{staticClass:"pattern"},[t._v("$")]),t._v(" 属于测试。它们的宽度为零。")]),t._v(" "),a("p",[t._v("换句话来说，它们并不匹配一个具体的字符，而是让正则引擎测试所表示的条件（文本开头/文本末尾）。")])]),t._v(" "),a("br"),t._v(" "),a("br"),t._v(" "),a("br")])},[],!1,null,null,null);s.default=e.exports}}]);