(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{1189:function(_,v,t){"use strict";t.r(v);var e=t(19),r=Object(e.a)({},function(){var _=this,v=_.$createElement,e=_._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[e("h1",{attrs:{id:"贝塞尔曲线"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#贝塞尔曲线","aria-hidden":"true"}},[_._v("#")]),_._v(" 贝塞尔曲线")]),_._v(" "),e("p",[_._v("贝塞尔曲线用于计算机图形绘制形状，CSS 动画和许多其他地方。")]),_._v(" "),e("p",[_._v("它们其实非常简单，值得学习一次并且在矢量图形和高级动画的世界里非常受用。")]),_._v(" "),e("br"),_._v(" "),e("br"),_._v(" "),e("br"),_._v(" "),e("h2",{attrs:{id:"控制点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#控制点","aria-hidden":"true"}},[_._v("#")]),_._v(" 控制点")]),_._v(" "),e("p",[e("a",{attrs:{href:"https://en.wikipedia.org/wiki/B%C3%A9zier_curve",target:"_blank",rel:"noopener noreferrer"}},[_._v("贝塞尔曲线"),e("OutboundLink")],1),_._v(" 由控制点定义。")]),_._v(" "),e("p",[_._v("这些点可能有 2、3、4 或更多。")]),_._v(" "),e("br"),_._v(" "),e("p",[_._v("例如，两点曲线：")]),_._v(" "),e("p",[e("img",{attrs:{src:t(594),alt:""}})]),_._v(" "),e("p",[_._v("三点曲线：")]),_._v(" "),e("p",[e("img",{attrs:{src:t(595),alt:""}})]),_._v(" "),e("p",[_._v("四点曲线：")]),_._v(" "),e("p",[e("img",{attrs:{src:t(596),alt:""}})]),_._v(" "),e("br"),_._v(" "),e("p",[_._v("如果仔细观察这些曲线，你会立即注意到：")]),_._v(" "),e("ol",[e("li",[e("strong",[_._v("控制点不总是在曲线上")]),_._v("这是非常正常的，稍后我们将看到曲线是如何构建的。")]),_._v(" "),e("li",[e("strong",[_._v("曲线的阶次等于控制点的数量减一")]),_._v("。 对于两个点我们能得到一条线性曲线（直线），三个点 — 一条二阶曲线，四个点 — 一条三阶曲线。")]),_._v(" "),e("li",[e("strong",[_._v("曲线总是在控制点的"),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Convex_hull",target:"_blank",rel:"noopener noreferrer"}},[_._v("凸包"),e("OutboundLink")],1),_._v("内部：")])])]),_._v(" "),e("p",[e("img",{attrs:{src:t(597),alt:""}}),_._v(" "),e("img",{attrs:{src:t(598),alt:""}})]),_._v(" "),e("p",[_._v("由于最后一个属性，在计算机图形学中，可以优化相交测试。如果凸包不相交，则曲线也不相交。因此，首先检查凸包的交叉点可以非常快地给出“无交叉”结果。检查交叉区域或凸包更容易，因为它们是矩形，三角形等（见上图），比曲线简单的多。")]),_._v(" "),e("p",[_._v("贝塞尔曲线绘制的主要重点 —— 通过移动曲线，曲线"),e("strong",[_._v("以直观明显的")]),_._v("方式变化。")]),_._v(" "),e("br"),_._v(" "),e("p",[_._v("尝试在下面的示例中使用鼠标移动控制点：")]),_._v(" "),e("ClientOnly",[e("learn_javascript_asdiasdkc-three-ashdqwieuzxc-01-demo")],1),_._v(" "),e("p",[e("strong",[_._v("可以注意到，曲线沿切线 1 → 2 和 3 → 4 延伸。")])]),_._v(" "),e("br"),_._v(" "),e("p",[_._v("经过一些练习后，很明显我们知道怎样通过放置控制点来获得所需要的曲线。通过连接几条曲线，我们几乎可以得到任何东西。")]),_._v(" "),e("p",[_._v("这里有一些例子：")]),_._v(" "),e("p",[e("img",{attrs:{src:t(599),alt:""}}),_._v(" "),e("img",{attrs:{src:t(600),alt:""}}),_._v(" "),e("img",{attrs:{src:t(601),alt:""}})]),_._v(" "),e("br"),_._v(" "),e("br"),_._v(" "),e("br"),_._v(" "),e("h2",{attrs:{id:"数学"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数学","aria-hidden":"true"}},[_._v("#")]),_._v(" 数学")]),_._v(" "),e("p",[_._v("贝塞尔曲线可以使用数学方程式来描述。")]),_._v(" "),e("p",[_._v("很快我们就能看到 —— 没必要知道它。但是为了完整性 —— 请看这里。")]),_._v(" "),e("p",[_._v("给定控制点 "),e("code",[_._v("P"),e("sub",[_._v("i")])]),_._v(" 的坐标：第一个控制点的坐标为 "),e("code",[_._v("P"),e("sub",[_._v("1")]),_._v(" = (x"),e("sub",[_._v("1")]),_._v(", y"),e("sub",[_._v("1")]),_._v(")")]),_._v("，第二个控制点的坐标为 "),e("code",[_._v("P"),e("sub",[_._v("2")]),_._v(" = (x"),e("sub",[_._v("2")]),_._v(", y"),e("sub",[_._v("2")]),_._v(")")]),_._v("，以此类推，曲线坐标由方程式描述，这个方程式依赖属于区间 "),e("code",[_._v("[0,1]")]),_._v(" 的参数 "),e("code",[_._v("t")]),_._v("。")]),_._v(" "),e("br"),_._v(" "),e("ul",[e("li",[_._v("有两个控制点的曲线方程：")])]),_._v(" "),e("p",[e("code",[_._v("P = (1-t)P"),e("sub",[_._v("1")]),_._v(" + tP"),e("sub",[_._v("2")])])]),_._v(" "),e("ul",[e("li",[_._v("有三个控制点的曲线方程：")])]),_._v(" "),e("p",[e("code",[_._v("P = (1−t)"),e("sup",[_._v("2")]),_._v("P"),e("sub",[_._v("1")]),_._v(" + 2(1−t)tP"),e("sub",[_._v("2")]),_._v(" + t"),e("sup",[_._v("2")]),_._v("P"),e("sub",[_._v("3")])])]),_._v(" "),e("ul",[e("li",[_._v("有四个控制点的曲线方程：")])]),_._v(" "),e("p",[e("code",[_._v("P = (1−t)"),e("sup",[_._v("3")]),_._v("P"),e("sub",[_._v("1")]),_._v(" + 3(1−t)"),e("sup",[_._v("2")]),_._v("tP"),e("sub",[_._v("2")]),_._v(" +3(1−t)t"),e("sup",[_._v("2")]),_._v("P"),e("sub",[_._v("3")]),_._v(" + t"),e("sup",[_._v("3")]),_._v("P"),e("sub",[_._v("4")])])]),_._v(" "),e("p",[_._v("这些是矢量方程。")]),_._v(" "),e("p",[_._v("我们可以逐坐标重写它们，例如 3 点曲线：")]),_._v(" "),e("ul",[e("li",[e("code",[_._v("x = (1−t)"),e("sup",[_._v("2")]),_._v("x"),e("sub",[_._v("1")]),_._v(" + 2(1−t)tx"),e("sub",[_._v("2")]),_._v(" + t"),e("sup",[_._v("2")]),_._v("x"),e("sub",[_._v("3")])])]),_._v(" "),e("li",[e("code",[_._v("y = (1−t)"),e("sup",[_._v("2")]),_._v("y"),e("sub",[_._v("1")]),_._v(" + 2(1−t)ty"),e("sub",[_._v("2")]),_._v(" + t"),e("sup",[_._v("2")]),_._v("y"),e("sub",[_._v("3")])])])]),_._v(" "),e("p",[_._v("我们应该放置 3 个控制点的坐标，而不是 "),e("code",[_._v("x1、y1、x2、y2、x3 和 y3")]),_._v("。")]),_._v(" "),e("br"),_._v(" "),e("p",[_._v("例如，如果控制点是 "),e("code",[_._v("(0,0)")]),_._v("、"),e("code",[_._v("(0.5, 1)")]),_._v(" 和 "),e("code",[_._v("(1, 0)")]),_._v("，则方程式为：")]),_._v(" "),e("ul",[e("li",[e("code",[_._v("x = (1−t)"),e("sup",[_._v("2")]),_._v(" * 0 + 2(1−t)t * 0.5 + t"),e("sup",[_._v("2")]),_._v(" * 1 = (1-t)t + t"),e("sup",[_._v("2")]),_._v(" = t")])]),_._v(" "),e("li",[e("code",[_._v("y = (1−t)"),e("sup",[_._v("2")]),_._v(" * 0 + 2(1−t)t * 1 + t"),e("sup",[_._v("2")]),_._v(" * 0 = 2(1-t)t = –t"),e("sup",[_._v("2")]),_._v(" + 2t")])])]),_._v(" "),e("p",[_._v("现在随着 "),e("code",[_._v("t")]),_._v(" 从 "),e("code",[_._v("0")]),_._v(" 到 "),e("code",[_._v("1")]),_._v(" 变化，每个 "),e("code",[_._v("t")]),_._v(" 对应的 "),e("code",[_._v("(x,y)")]),_._v(" 集合可以构成曲线。")]),_._v(" "),e("p",[_._v("这可能太学术化了，对于曲线为什么看起来像这样以及它们如何依赖于控制点的描述并不是很明显。")]),_._v(" "),e("p",[_._v("所以绘制算法可能更容易理解。")]),_._v(" "),e("br"),_._v(" "),e("br"),_._v(" "),e("br"),_._v(" "),e("h2",{attrs:{id:"德卡斯特里奥算法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#德卡斯特里奥算法","aria-hidden":"true"}},[_._v("#")]),_._v(" 德卡斯特里奥算法")]),_._v(" "),e("p",[e("a",{attrs:{href:"https://en.wikipedia.org/wiki/De_Casteljau%27s_algorithm",target:"_blank",rel:"noopener noreferrer"}},[_._v("德卡斯特里奥算法"),e("OutboundLink")],1),_._v("与曲线的数学定义相同，但直观地显示了曲线是如何被建立的。")]),_._v(" "),e("p",[_._v("让我们看看 3 个控制点的例子。")]),_._v(" "),e("p",[_._v("这里是一个演示，随后会有解释。")]),_._v(" "),e("p",[_._v("控制点可以用鼠标移动，点击 “play” 运行演示。")]),_._v(" "),e("ClientOnly",[e("learn_javascript_asdiasdkc-three-ashdqwieuzxc-01-demo2")],1),_._v(" "),e("p",[e("strong",[_._v("德卡斯特里奥算法构造三点贝塞尔曲线：")])]),_._v(" "),e("ul",[e("li",[e("ol",[e("li",[_._v("绘制控制点。在上面的演示中，它们标有："),e("code",[_._v("1")]),_._v("、"),e("code",[_._v("2")]),_._v(" 和 "),e("code",[_._v("3")]),_._v("。")])])]),_._v(" "),e("li",[e("ol",{attrs:{start:"2"}},[e("li",[_._v("创建控制点 1 → 2 → 3 间的线段. 在上面的演示中它们是"),e("span",{staticStyle:{color:"#825E28"}},[_._v("棕色")]),_._v("的。")])])]),_._v(" "),e("li",[e("ol",{attrs:{start:"3"}},[e("li",[_._v("参数 "),e("code",[_._v("t")]),_._v(" 从 "),e("code",[_._v("0")]),_._v(" to "),e("code",[_._v("1")]),_._v(" 变化。 在上面的演示中取值 "),e("code",[_._v("0.05")]),_._v("：循环遍历 "),e("code",[_._v("0, 0.05, 0.1, 0.15, ... 0.95, 1")]),_._v("。")])]),_._v(" "),e("p",[_._v("对于每一个 "),e("code",[_._v("t")]),_._v(" 的取值：")]),_._v(" "),e("ul",[e("li",[e("p",[_._v("在每一个"),e("span",{staticStyle:{color:"#825E28"}},[_._v("棕色")]),_._v("线段上我们取一个点，这个点距起点的距离按比例 "),e("code",[_._v("t")]),_._v(" 取值。由于有两条线段，我们能得到两个点。")]),_._v(" "),e("p",[_._v("例如，当 "),e("code",[_._v("t=0")]),_._v(" — 所有点都在线段起点处，当 "),e("code",[_._v("t=0.25")]),_._v(" — 点到起点的距离为线段长度的 25%，当 "),e("code",[_._v("t=0.5")]),_._v(" — 50%（中间），当 "),e("code",[_._v("t=1")]),_._v(" — 线段终点。")])]),_._v(" "),e("li",[e("p",[_._v("连接这些点，下面这张图中连好的线被绘制成"),e("span",{staticStyle:{color:"#167490"}},[_._v("蓝色")]),_._v("。")])])])])]),_._v(" "),e("table",[e("thead",[e("tr",[e("th",[e("strong",[_._v("当 "),e("code",[_._v("t=0.25")])])]),_._v(" "),e("th",[e("strong",[_._v("当 "),e("code",[_._v("t=0.5")])])])])]),_._v(" "),e("tbody",[e("tr",[e("td",[e("img",{attrs:{src:t(602),alt:""}})]),_._v(" "),e("td",[e("img",{attrs:{src:t(603),alt:""}})])])])]),_._v(" "),e("ul",[e("li",[e("ol",{attrs:{start:"4"}},[e("li",[_._v("现在在"),e("span",{staticStyle:{color:"#167490"}},[_._v("蓝色")]),_._v("线段上取一个点，距离比例取相同数值的 "),e("code",[_._v("t")]),_._v("。也就是说，当 "),e("code",[_._v("t=0.25")]),_._v("（左图）时，我们取到的点位于线段的左 1/4 终点处，当 "),e("code",[_._v("t=0.5")]),_._v("（右图）时 — 线段中间。在上图中这一点是"),e("span",{staticStyle:{color:"red"}},[_._v("红色")]),_._v("的。")])])]),_._v(" "),e("li",[e("ol",{attrs:{start:"5"}},[e("li",[_._v("随着 "),e("code",[_._v("t")]),_._v(" 从 "),e("code",[_._v("0")]),_._v(" to "),e("code",[_._v("1")]),_._v(" 变化，每一个 "),e("code",[_._v("t")]),_._v(" 的值都会添加一个点到曲线上。这些点的集合就形成的贝塞尔曲线。它在上面的图中是"),e("span",{staticStyle:{color:"red"}},[_._v("红色")]),_._v("的，并且是抛物线状的。")])])])]),_._v(" "),e("p",[_._v("这是三控制点的处理过程，但是对于 4 个点同样适用。")]),_._v(" "),e("br"),_._v(" "),e("p",[_._v("4 个控制点的演示（点可以被鼠标移动）：")]),_._v(" "),e("ClientOnly",[e("learn_javascript_asdiasdkc-three-ashdqwieuzxc-01-demo3")],1),_._v("\n算法：\n"),e("ul",[e("li",[_._v("控制点通过线段连接：1 → 2、2 → 3 和 3 → 4。 我们能得到 3 条"),e("span",{staticStyle:{color:"#825E28"}},[_._v("棕色")]),_._v("的线段。")]),_._v(" "),e("li",[_._v("对于 "),e("code",[_._v("0")]),_._v(" to "),e("code",[_._v("1")]),_._v(" 之间的每一个 "),e("code",[_._v("t")]),_._v("：\n"),e("ul",[e("li",[_._v("我们在这些线段上距起点距离比例为 "),e("code",[_._v("t")]),_._v(" 的位置取点。把这些点连接起来，然后得到两条"),e("span",{staticStyle:{color:"#0A0"}},[_._v("绿色线段")]),_._v("。")]),_._v(" "),e("li",[_._v("在这些线段上同样按比例 "),e("code",[_._v("t")]),_._v(" 取点，得到一条"),e("span",{staticStyle:{color:"#167490"}},[_._v("蓝色线段")]),_._v("。")]),_._v(" "),e("li",[_._v("在蓝色线段按比例 "),e("code",[_._v("t")]),_._v(" 取点。在上面的例子中是"),e("span",{staticStyle:{color:"red"}},[_._v("红色")]),_._v("的。")])])]),_._v(" "),e("li",[_._v("这些点在一起组成了曲线。")])]),_._v(" "),e("p",[_._v("该算法是递归的，并且可以适应于任意数量的控制点。")]),_._v(" "),e("p",[_._v("给定 N 个控制点，我们将它们连接起来以获得初始的 N-1 个线段。")]),_._v(" "),e("p",[_._v("然后对从 "),e("code",[_._v("0")]),_._v(" 到 "),e("code",[_._v("1")]),_._v(" 的每一个 "),e("code",[_._v("t")]),_._v("：")]),_._v(" "),e("ul",[e("li",[_._v("在每条线段上按 "),e("code",[_._v("t")]),_._v(" 比例距离取一个点并且连接 —— 会得到 N-2 个线段。")]),_._v(" "),e("li",[_._v("在上面得到的每条线段上按 "),e("code",[_._v("t")]),_._v(" 比例距离取一个点并且连接 —— 会得到 N-3 个线段，以此类推……")]),_._v(" "),e("li",[_._v("直到我们得到一个点。得到的这些点就形成了曲线。")])]),_._v(" "),e("br"),_._v(" "),e("p",[_._v("曲线的移动演示:")]),_._v(" "),e("ClientOnly",[e("learn_javascript_asdiasdkc-three-ashdqwieuzxc-01-demo4")],1),_._v(" "),e("br"),_._v(" "),e("p",[_._v("和其它的点：")]),_._v(" "),e("ClientOnly",[e("learn_javascript_asdiasdkc-three-ashdqwieuzxc-01-demo5")],1),_._v(" "),e("br"),_._v(" "),e("p",[_._v("环形：")]),_._v(" "),e("ClientOnly",[e("learn_javascript_asdiasdkc-three-ashdqwieuzxc-01-demo6")],1),_._v(" "),e("br"),_._v(" "),e("p",[_._v("非平滑贝塞尔曲线：")]),_._v(" "),e("ClientOnly",[e("learn_javascript_asdiasdkc-three-ashdqwieuzxc-01-demo7")],1),_._v(" "),e("br"),_._v(" "),e("p",[_._v("由于算法是递归的，我们可以构建任何顺序的贝塞尔曲线：使用 5 个、6 个或更多个控制点。但在实践中它们没那么有用。通常我们取 2-3 个点，对于复杂的线条，将几条曲线拼接在一起。这更容易开发和计算。")]),_._v(" "),e("br"),_._v(" "),e("div",{staticClass:"tip custom-block"},[e("p",[e("strong",[_._v("如何通过给定点绘制曲线？")])]),_._v(" "),e("p",[_._v("我们使用控制点制作贝塞尔曲线。正如我们所见，它们并不在曲线上。或者更准确地说，第一个和最后一个在曲线上，但其它的不在。")]),_._v(" "),e("p",[_._v("有时我们有另一种任务：绘制一条曲线"),e("strong",[_._v("通过几个点")]),_._v("，让它们都在一条平滑曲线上。这种任务叫"),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Interpolation",target:"_blank",rel:"noopener noreferrer"}},[_._v("插值"),e("OutboundLink")],1),_._v("，这里我们不覆盖讲解它。")]),_._v(" "),e("p",[_._v("这些曲线有数学方程式，例如"),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Lagrange_polynomial",target:"_blank",rel:"noopener noreferrer"}},[_._v("拉格朗日多项式"),e("OutboundLink")],1),_._v("。")]),_._v(" "),e("p",[_._v("在计算机图形中"),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Spline_interpolation",target:"_blank",rel:"noopener noreferrer"}},[_._v("样条插值"),e("OutboundLink")],1),_._v("通常用于构建连接多个点的平滑曲线。")])]),_._v(" "),e("br"),_._v(" "),e("br"),_._v(" "),e("br"),_._v(" "),e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[_._v("#")]),_._v(" 总结")]),_._v(" "),e("p",[_._v("贝塞尔曲线由其控制点定义。")]),_._v(" "),e("p",[_._v("贝塞尔曲线的两种定义方法：")]),_._v(" "),e("ol",[e("li",[_._v("使用数学方程式。")]),_._v(" "),e("li",[_._v("使用绘图过程：德卡斯特里奥算法")])]),_._v(" "),e("p",[_._v("贝塞尔曲线的优点：")]),_._v(" "),e("ul",[e("li",[_._v("我们可以通过控制点移动来用鼠标绘制平滑线条。")]),_._v(" "),e("li",[_._v("复杂的形状可以由多条贝塞尔曲线组成。")])]),_._v(" "),e("p",[_._v("用途：")]),_._v(" "),e("ul",[e("li",[_._v("在计算机图形学，建模，矢量图形编辑器中。字体由贝塞尔曲线描述。")]),_._v(" "),e("li",[_._v("在 Web 开发中 — 用于 Canvas 上的图形和 SVG 格式。顺便说一下，上面的“实时”示例是用 SVG 编写的。它们实际上是一个 SVG 文档，被赋予不同的控制点做参数。你可以在单独的窗口中打开它并查源码："),e("a",{attrs:{href:"/learn_javascript_asdiasdkc/three/ashdqwieuzxc/01/demo.svg?p=0,0,1,0.5,0,0.5,1,1&animate=1"}},[_._v("demo.svg")]),_._v("。")]),_._v(" "),e("li",[_._v("在 CSS 动画中描述动画的路径和速度。")])]),_._v(" "),e("br"),_._v(" "),e("br"),_._v(" "),e("br")],1)},[],!1,null,null,null);v.default=r.exports},594:function(_,v,t){_.exports=t.p+"assets/img/bezier2.6a208014.svg"},595:function(_,v,t){_.exports=t.p+"assets/img/bezier3.116f0725.svg"},596:function(_,v,t){_.exports=t.p+"assets/img/bezier4.e2e275a2.svg"},597:function(_,v,t){_.exports=t.p+"assets/img/bezier4-e.e56f9ec3.svg"},598:function(_,v,t){_.exports=t.p+"assets/img/bezier3-e.aba90fd4.svg"},599:function(_,v,t){_.exports=t.p+"assets/img/bezier-car.5629e1fd.svg"},600:function(_,v,t){_.exports=t.p+"assets/img/bezier-letter.b719990d.svg"},601:function(_,v,t){_.exports=t.p+"assets/img/bezier-vase.5a331887.svg"},602:function(_,v,t){_.exports=t.p+"assets/img/bezier3-draw1.33516c77.svg"},603:function(_,v,t){_.exports=t.p+"assets/img/bezier3-draw2.9789a175.svg"}}]);