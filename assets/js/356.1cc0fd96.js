(window.webpackJsonp=window.webpackJsonp||[]).push([[356],{1077:function(s,t,a){"use strict";a.r(t);var n=a(19),e=Object(n.a)({},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"原始类型的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原始类型的方法","aria-hidden":"true"}},[s._v("#")]),s._v(" 原始类型的方法")]),s._v(" "),a("p",[s._v("JavaScript 允许我们像使用对象一样使用原始类型（字符串，数字等）。JavaScript 还提供了这样的调用方法。我们很快就会学习它们，但是首先我们将了解它的工作原理，毕竟原始类型不是对象（在这里我们会分析地更加清楚）。")]),s._v(" "),a("br"),s._v(" "),a("p",[s._v("我们来看看原始类型和对象之间的关键区别。")]),s._v(" "),a("p",[a("strong",[s._v("一个原始值：")])]),s._v(" "),a("ul",[a("li",[s._v("是原始类型中的一种值。")]),s._v(" "),a("li",[s._v("在 JavaScript 中有 7 种原始类型："),a("code",[s._v("string")]),s._v("，"),a("code",[s._v("number")]),s._v("，"),a("code",[s._v("bigint")]),s._v("，"),a("code",[s._v("boolean")]),s._v("，"),a("code",[s._v("symbol")]),s._v("，"),a("code",[s._v("null")]),s._v(" 和 "),a("code",[s._v("undefined")]),s._v("。")])]),s._v(" "),a("br"),s._v(" "),a("p",[a("strong",[s._v("一个对象：")])]),s._v(" "),a("ul",[a("li",[s._v("能够存储多个值作为属性。")]),s._v(" "),a("li",[s._v("可以使用大括号 "),a("code",[s._v("{}")]),s._v(" 创建对象，例如："),a("code",[s._v('{name: "John", age: 30}')]),s._v("。JavaScript 中还有其他种类的对象，例如函数就是对象。")])]),s._v(" "),a("br"),s._v(" "),a("p",[s._v("关于对象的最好的事儿之一是，我们可以把一个函数作为对象的属性存储到对象中。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" john "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"John"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("sayHi")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hi buddy!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\njohn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sayHi")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Hi buddy!")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("所以我们在这里创建了一个包含 "),a("code",[s._v("sayHi")]),s._v(" 方法的对象 "),a("code",[s._v("john")]),s._v("。")]),s._v(" "),a("p",[s._v("许多内建对象已经存在，例如那些处理日期、错误、HTML 元素等的内建对象。它们具有不同的属性和方法。")]),s._v(" "),a("p",[s._v("但是，这些特性（feature）都是有成本的！")]),s._v(" "),a("p",[s._v("对象比原始类型“更重”。它们需要额外的资源来支持运作。")]),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("h2",{attrs:{id:"当作对象的原始类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#当作对象的原始类型","aria-hidden":"true"}},[s._v("#")]),s._v(" 当作对象的原始类型")]),s._v(" "),a("p",[s._v("以下是 JavaScript 创建者面临的悖论：")]),s._v(" "),a("ul",[a("li",[s._v("人们可能想对诸如字符串或数字之类的原始类型执行很多操作。最好将它们作为方法来访问。")]),s._v(" "),a("li",[s._v("原始类型必须尽可能的简单轻量。")])]),s._v(" "),a("br"),s._v(" "),a("p",[s._v("而解决方案看起来多少有点尴尬，如下：")]),s._v(" "),a("ol",[a("li",[s._v("原始类型仍然是原始的。与预期相同，提供单个值")]),s._v(" "),a("li",[s._v("JavaScript 允许访问字符串，数字，布尔值和 symbol 的方法和属性。")]),s._v(" "),a("li",[s._v("为了使它们起作用，创建了提供额外功能的特殊“对象包装器”，使用后即被销毁。")])]),s._v(" "),a("p",[a("strong",[s._v("“对象包装器”")]),s._v(" 对于每种原始类型都是不同的，它们被称为 "),a("code",[s._v("String")]),s._v("、"),a("code",[s._v("Number")]),s._v("、"),a("code",[s._v("Boolean")]),s._v(" 和 "),a("code",[s._v("Symbol")]),s._v("。因此，它们提供了不同的方法。")]),s._v(" "),a("br"),s._v(" "),a("p",[s._v("例如，字符串方法 "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toUpperCase",target:"_blank",rel:"noopener noreferrer"}},[s._v("str.toUpperCase()"),a("OutboundLink")],1),s._v(" 返回一个大写化处理的字符串。")]),s._v(" "),a("p",[s._v("用法演示如下：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toUpperCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// HELLO")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("很简单，对吧？以下是 "),a("code",[s._v("str.toUpperCase()")]),s._v(" 中实际发生的情况：")]),s._v(" "),a("ol",[a("li",[s._v("字符串 "),a("code",[s._v("str")]),s._v(" 是一个原始值。因此，在访问其属性时，会创建一个包含字符串字面值的特殊对象，并且具有有用的方法，例如 "),a("code",[s._v("toUpperCase()")]),s._v("。")]),s._v(" "),a("li",[s._v("该方法运行并返回一个新的字符串（由 "),a("code",[s._v("alert")]),s._v(" 显示）。")]),s._v(" "),a("li",[s._v("特殊对象被销毁，只留下原始值 "),a("code",[s._v("str")]),s._v("。")])]),s._v(" "),a("p",[s._v("所以原始类型可以提供方法，但它们依然是轻量级的。")]),s._v(" "),a("br"),s._v(" "),a("p",[s._v("JavaScript 引擎高度优化了这个过程。它甚至可能跳过创建额外的对象。但是它仍然必须遵守规范，并且表现得好像它创建了一样。")]),s._v(" "),a("p",[s._v("数字有其自己的方法，例如，"),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed",target:"_blank",rel:"noopener noreferrer"}},[s._v("toFixed(n)"),a("OutboundLink")],1),s._v(" 将数字舍入到给定的精度：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.23456")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toFixed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1.23")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("我们将在后面 "),a("router-link",{attrs:{to:"/learn_javascript_asdiasdkc/one/wergfhgfhk/02/"}},[s._v("数字类型")]),s._v(" 和 "),a("router-link",{attrs:{to:"/learn_javascript_asdiasdkc/one/wergfhgfhk/03/"}},[s._v("字符串")]),s._v(" 章节中看到更多具体的方法。")],1),s._v(" "),a("br"),s._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",[a("strong",[s._v("构造器 "),a("code",[s._v("String/Number/Boolean")]),s._v(" 仅供内部使用")])]),s._v(" "),a("p",[s._v("像 Java 这样的一些语言允许我们使用 "),a("code",[s._v("new Number(1)")]),s._v(" 或 "),a("code",[s._v("new Boolean(false)")]),s._v(" 等语法，明确地为原始类型创建“对象包装器”。")]),s._v(" "),a("p",[s._v("在 JavaScript 中，由于历史原因，这也是可以的，但极其 "),a("strong",[s._v("不推荐")]),s._v("。因为这样会出问题。")]),s._v(" "),a("p",[s._v("例如：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "number"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "object"!')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("对象在 "),a("code",[s._v("if")]),s._v(" 中始终为真，因此此处的 "),a("code",[s._v("alert")]),s._v(" 将显示：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" zero "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("zero"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// zero 为 true，因为它是一个对象")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zero is truthy?!?"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("另一方面，调用不带 "),a("code",[s._v("new")]),s._v("（关键字）的 "),a("code",[s._v("String/Number/Boolean")]),s._v(" 函数是完全理智和有用的。它们将一个值转换为相应的类型：转成字符串、数字或布尔值（原始类型）。")]),s._v(" "),a("p",[s._v("例如，下面完全是有效的：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"123"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将字符串转成数字")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("div",{staticClass:"warning custom-block"},[a("p",[a("strong",[s._v("null/undefined 没有任何方法")])]),s._v(" "),a("p",[s._v("特殊的原始类型 "),a("code",[s._v("null")]),s._v(" 和 "),a("code",[s._v("undefined")]),s._v(" 是例外。它们没有对应的“对象包装器”，也没有提供任何方法。从某种意义上说，它们是“最原始的”。")]),s._v(" "),a("p",[s._v("尝试访问这种值的属性会导致错误：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// error")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),a("ul",[a("li",[s._v("除 "),a("code",[s._v("null")]),s._v(" 和 "),a("code",[s._v("undefined")]),s._v(" 以外的原始类型都提供了许多有用的方法。我们后面的章节中学习这些内容。")]),s._v(" "),a("li",[s._v("从形式上讲，这些方法通过临时对象工作，但 JavaScript 引擎可以很好地调整，以在内部对其进行优化，因此调用它们并不需要太高的成本。")])]),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("br")])},[],!1,null,null,null);t.default=e.exports}}]);