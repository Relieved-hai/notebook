(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{1121:function(_,v,t){"use strict";t.r(v);var r=t(19),a=Object(r.a)({},function(){var _=this,v=_.$createElement,r=_._self._c||v;return r("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[r("h2",{attrs:{id:"一、浏览器背后的故事"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一、浏览器背后的故事","aria-hidden":"true"}},[_._v("#")]),_._v(" 一、浏览器背后的故事")]),_._v(" "),r("p",[_._v("我们在访问一个网站，通常是通过域名去访问，其实背后不是站着一个域名什么样的东西，而是站一台又一台的服务器。我们真正访问的就是一串数字，也就是 IP。")]),_._v(" "),r("p",[r("img",{attrs:{src:t(466),alt:"http"}})]),_._v(" "),r("p",[_._v("通常，我们通过在浏览器输入一个域名。")]),_._v(" "),r("ul",[r("li",[r("p",[_._v("1、首先，会先通过 DNS 服务器，来获取域名所映射的 IP 地址。")])]),_._v(" "),r("li",[r("p",[_._v("2、浏览器就会拿到返回的 IP 地址去跟 WEB 服务器通讯，而通讯的协议就是 HTTP 协议。")]),_._v(" "),r("ul",[r("li",[_._v("我们可以把这个过程理解成平时两个人通电话，我们第一步是去通讯录里找到对应的名字，我们拨打过去，实际上名字就只是一个标识符，一个代号。我们真正拨过去的时候一串长长的电话号码。在你通讯录里的人，你认得他们的模样，名字，但是你不一定能记住他们对应的电话号码。打通之后，我们需要进行对话，这时候对话就需要使用共同语言，如果一个北方人用自己的家乡话，另一个人南方人用自己的家乡话，那么是谁都听不懂。这个例子中，名字就相当于域名，而电话号码就是 IP 地址，这里的共同语言就是 HTTP 协议了。")])])]),_._v(" "),r("li",[r("p",[_._v("3、当我们在浏览器上看见的花花绿绿的页面，是怎样出现的呢！是 Http 协议请求后的返回吗？ 它是，也不是。")])]),_._v(" "),r("li",[r("p",[_._v("4、首先，我们 WEB 服务器收到请求，自然回到后端去执行，然后将我们的执行结果以响应报文的形式回传到浏览器。")])]),_._v(" "),r("li",[r("p",[_._v("5、这里浏览器收到的是一堆莫名其妙的报文，如果直接展示给用户，那么百分之九十九的人都有疯掉，只剩下那么百分之一的程序猿能看的津津有味了。")])]),_._v(" "),r("li",[r("p",[_._v("6、这里就需要浏览器在进行渲染了，简单说渲染引擎根据 HTML 文件描述的数据模型，调用浏览器各个零部件，从而将源代码展示出来。")]),_._v(" "),r("ul",[r("li",[_._v("首先我们要解析 HTML， 浏览器执行了所有加载解析逻辑，在解析HTML的过程中，发出页面渲染所需要的各种外部资源请求。包括一些 JS、CSS 这些。获取到后，浏览器将识别并加载所有的 CSS 样式信息，然后去计算我们的图层布局，这里包括页面中的所有元素，它的相对位置信息，大小，展示效果等等，然后绘制图层，把图层转成我们能识别的像素，并对图片，视频，等一些媒体文件解码后，在整合整合图层，得到一个页面，最后由浏览器合并各个图层，将数据由 CPU 输出到显示的 GPU 上，绘制到屏幕，最后展示出来。（当然，这里还有很多更细的渲染相关的）")])])])]),_._v(" "),r("br"),_._v(" "),r("br"),_._v(" "),r("br"),_._v(" "),r("h4",{attrs:{id:"那么浏览器和我们的web服务器使用-http-协议进行通信，那么-http？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#那么浏览器和我们的web服务器使用-http-协议进行通信，那么-http？","aria-hidden":"true"}},[_._v("#")]),_._v(" 那么浏览器和我们的WEB服务器使用 HTTP 协议进行通信，那么 HTTP？")]),_._v(" "),r("p",[r("code",[_._v("HTTP")])]),_._v(" "),r("ul",[r("li",[r("p",[_._v("超文本传输协议（HTTP）是一种通信协议，它允许将超文本标记语言（HTML）文档从WEB服务器传送到客户端的浏览器")])]),_._v(" "),r("li",[r("p",[_._v("什么是超文本传输协议呢？ 字面意思就是传输超文本的协议，比方我们有AB两个人，每个人手里都有一份文件（超文本），A按照 "),r("code",[_._v("协议")]),_._v(" 将 "),r("code",[_._v("文件（超文本）")]),_._v(" 递给了B。")])]),_._v(" "),r("li",[r("p",[_._v("在这个过程中，我们传递东西的时候，就要遵守这种规则，这就是协议，就像在生活中，我们一定要遵守开酒不喝车，喝车不开酒。")])]),_._v(" "),r("li",[r("p",[_._v("那么超文本简单来说就是超级文本，...... ，那么文本我们可以解释为，有图文内容的文件，那么超级文本，简单来说，在我们的文本有有超链接（点击超链接就可以跳到其他地方去），超文本的格式有很多种，目前我们最常用的就是 超文本标记语言（"),r("code",[_._v("HTML")]),_._v("）。")])]),_._v(" "),r("li",[r("p",[_._v("也就是 A B 之间传递 HTML 的一种规则。这就是 HTTP 协议。")])]),_._v(" "),r("li",[r("p",[_._v("HTTP 是一个属于"),r("strong",[_._v("应用层的面向对象的协议")]),_._v("，由于其间接、快速的方式，适用于分布式超媒体信息系统。")])])]),_._v(" "),r("h4",{attrs:{id:"web-与-http？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#web-与-http？","aria-hidden":"true"}},[_._v("#")]),_._v(" Web 与 HTTP？")]),_._v(" "),r("ul",[r("li",[r("p",[_._v("WEB 是一种基于超文本和 HTTP 的、全球性的、动态交互的、跨平台的分布式图形信息系统。")])]),_._v(" "),r("li",[r("p",[_._v("建立在 Internet 上的一种网络服务， 为浏览者在 Internet 上查找和浏览信息提供了图形化的、易于访问的直观界面，其中的文档及超级链接将 Internet 上的信息节点组成一个互为关联的网状结构。")])])]),_._v(" "),r("br"),_._v(" "),r("br"),_._v(" "),r("br"),_._v(" "),r("h2",{attrs:{id:"二、透过tcpip看http"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二、透过tcpip看http","aria-hidden":"true"}},[_._v("#")]),_._v(" 二、透过TCPIP看HTTP")]),_._v(" "),r("p",[_._v("HTTP 协议是构建在 TCP/IP 协议之上的，是 TCP/IP 协议的一个子集")]),_._v(" "),r("br"),_._v(" "),r("br"),_._v(" "),r("br"),_._v(" "),r("h4",{attrs:{id:"tcp-ip-协议族"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tcp-ip-协议族","aria-hidden":"true"}},[_._v("#")]),_._v(" TCP/IP 协议族")]),_._v(" "),r("ul",[r("li",[r("p",[_._v("TCP/IP 协议其实是一系列与互联网相关联的协议集合起来的总称")])]),_._v(" "),r("li",[r("p",[_._v("分层管理是 TCP/IP 协议的重要特征")])])]),_._v(" "),r("br"),_._v(" "),r("br"),_._v(" "),r("br"),_._v(" "),r("h4",{attrs:{id:"tcp-ip-协议族分层"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tcp-ip-协议族分层","aria-hidden":"true"}},[_._v("#")]),_._v(" TCP/IP 协议族分层")]),_._v(" "),r("ul",[r("li",[_._v("TCP/IP协议族是由一个四层协议组成的系统，这四层分别为："),r("strong",[_._v("应用层")]),_._v("、"),r("strong",[_._v("传输层")]),_._v("、"),r("strong",[_._v("网络层")]),_._v("、和"),r("strong",[_._v("数据链路层")])])]),_._v(" "),r("p",[r("img",{attrs:{src:t(467),alt:"TCP/IP"}})]),_._v(" "),r("ul",[r("li",[r("p",[_._v("应用层")]),_._v(" "),r("ul",[r("li",[_._v("一般是我们编写的应用程序，决定了向用户提供的应用服务。应用层可以通过系统调用和传输层进行通信。如：FTP、DNS、HTTP 等。")])])]),_._v(" "),r("li",[r("p",[_._v("传输层")]),_._v(" "),r("ul",[r("li",[_._v("传输层通过系统调用向应用层提供处于网络连接中两台计算机之间的数据传输功能。")]),_._v(" "),r("li",[_._v("在传输层有两个性质不同的协议：TCP（是面向连接的，可靠，低效） 和 UDP（是无连接，不可靠，高效）。")])])]),_._v(" "),r("li",[r("p",[_._v("网络层（网络互连层）")]),_._v(" "),r("ul",[r("li",[_._v("网络层用来处理在网络上流动的数据包，数据包是网络传输的最小数据单位。该层规定了通过怎样的路径（传输路线）到达对方计算机，并把数据包传递给对方。")])])]),_._v(" "),r("li",[r("p",[_._v("链路层（数据链路层、网络接口层）")]),_._v(" "),r("ul",[r("li",[_._v("链路层用来处理连接网络的硬件部分，包括控制操作系统、硬件设备驱动、NIC（Network Interface Card）以及光纤等物理可见部分。硬件上的范畴均在链路层的作用范围之内。")])])])]),_._v(" "),r("br"),_._v(" "),r("br"),_._v(" "),r("br"),_._v(" "),r("h4",{attrs:{id:"数据包的封装过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据包的封装过程","aria-hidden":"true"}},[_._v("#")]),_._v(" 数据包的封装过程")]),_._v(" "),r("p",[r("img",{attrs:{src:t(468),alt:"TCP/IP"}})]),_._v(" "),r("br"),_._v(" "),r("br"),_._v(" "),r("br"),_._v(" "),r("h4",{attrs:{id:"http-数据传输过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#http-数据传输过程","aria-hidden":"true"}},[_._v("#")]),_._v(" HTTP 数据传输过程")]),_._v(" "),r("p",[r("img",{attrs:{src:t(469),alt:"TCP/IP"}})]),_._v(" "),r("p",[r("strong",[_._v("发送端")]),_._v("：发送数据时，数据会从上层传输到下层，且每经过一层都会被打上该层的头部信息。")]),_._v(" "),r("p",[r("strong",[_._v("接受端")]),_._v("：接收数据时，数据会从下层传输到上层，传输前会把下层的头部信息删除。")]),_._v(" "),r("br"),_._v(" "),r("br"),_._v(" "),r("br"),_._v(" "),r("h4",{attrs:{id:"传输层-——-tcp-三次握手"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#传输层-——-tcp-三次握手","aria-hidden":"true"}},[_._v("#")]),_._v(" 传输层 —— TCP 三次握手")]),_._v(" "),r("p",[r("img",{attrs:{src:t(470),alt:"TCP/IP"}})]),_._v(" "),r("p",[_._v("使用 TCP 协议进行通信的双方必须先建立链接，然后才能开始传输数据。为了确保连接双方可靠性，在双方建立连接时，TCP协议采用了三次握手策略。")]),_._v(" "),r("br"),_._v(" "),r("br"),_._v(" "),r("br"),_._v(" "),r("p",[r("img",{attrs:{src:t(471),alt:"TCP/IP"}})]),_._v(" "),r("ul",[r("li",[r("p",[r("strong",[_._v("第一次握手")]),_._v("：客户端发送带有 SYN 标志的连接请求报文段，然后进入 SYN_SEND 状态，等待服务端的确定。")])]),_._v(" "),r("li",[r("p",[r("strong",[_._v("第二次握手")]),_._v(": 服务端接收到客户端的 SYN 报文段后，需要发送 ACK 信息对这个 SYN 报文段进行确认。同时，还要发送自己的 SYN 请求信息。服务端会将上述的信息放到一个报文段（SYN + ACK 报文段）中，一并发送给客户端，此时服务端将会进入 SYN_RECV 状态。")])]),_._v(" "),r("li",[r("p",[r("strong",[_._v("第三次握手")]),_._v("：客户端接收到服务端的 SYN + ACK 报文段后，会向服务端发送 ACK 确认报文段，这个报文段发送完毕后，客户端和服务端都进入 ESTABLISHED 状态。完成 TCP 三次握手。")])])]),_._v(" "),r("br"),_._v(" "),r("br"),_._v(" "),r("br"),_._v(" "),r("h4",{attrs:{id:"为什么要三次握手呢？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#为什么要三次握手呢？","aria-hidden":"true"}},[_._v("#")]),_._v(" 为什么要三次握手呢？")]),_._v(" "),r("p",[_._v("防止失效的连接请求报文段被服务端接收，从而产生错误。")]),_._v(" "),r("p",[_._v("PS：失效的连接请求：若客户端向服务端发送的连接请求丢失，客户端等待应答超时后就会再次发送连接请求，此时，上一个连接请求就是『失效的』。")]),_._v(" "),r("p",[_._v("若建立连接只需两次握手，客户端并没有太大的变化，仍然需要获得服务端的应答后才进入ESTABLISHED状态，而服务端在收到连接请求后就进入ESTABLISHED状态。此时如果网络拥塞，客户端发送的连接请求迟迟到不了服务端，客户端便超时重发请求，如果服务端正确接收并确认应答，双方便开始通信，通信结束后释放连接。此时，如果那个失效的连接请求抵达了服务端，由于只有两次握手，服务端收到请求就会进入ESTABLISHED状态，等待发送数据或主动发送数据。但此时的客户端早已进入CLOSED状态，服务端将会一直等待下去，这样浪费服务端连接资源。")]),_._v(" "),r("br"),_._v(" "),r("p",[r("strong",[_._v("例子：A B 两个人都买了一个新手机，都想测试一下短信功能，但是两个人不在一起。")])]),_._v(" "),r("ul",[r("li",[_._v("1、于是 A 给 B 发了一条短信（你能看到我的短信吗？看到回复 666）。")]),_._v(" "),r("li",[_._v("2、B 看到了短信，说明 A 发短信的功能是正常的，我自己手机接短信的功能好用，然后 B 想知道自己的手机发短信是否正常，于是回复（我收到了，666，你能收到吗？收到回个 six ）")]),_._v(" "),r("li",[_._v("3、于是 A 收到了 B 的短信，在 A 没收到短信之前，A 也不知道自己发短信是否正常，但是收到后，A 就知道 A、B 的收发都正常。但是 B 还不知道自己的发短信是否正常，于是 A 最后发送了一条短信。 （已收到， six ）。")])]),_._v(" "),r("br"),_._v(" "),r("br"),_._v(" "),r("br"),_._v(" "),r("p",[_._v("HTTP 协议是在一个非常庞大的 TCP/IP 协议的家族里，仅仅是这个家族中"),r("strong",[_._v("应用层")]),_._v("的一个孩子。同时这个家族里有着非常严谨的交流方式，这个方式叫做"),r("strong",[_._v("封装的方式")]),_._v("，同时由于 HTTP 跟传输层的 TCP 紧密关联，所以呢！每次操作、连接的时候，都要进行三次握手，来建立链接。认识一个人，除了了解他本人，还得去看看他的朋友，毕竟像 HTTP 协议这样的大家族的孩子，还得从他的朋友圈观察一下的它的人品情况。所以来认识一下 DNS。")]),_._v(" "),r("br"),_._v(" "),r("br"),_._v(" "),r("br"),_._v(" "),r("h2",{attrs:{id:"三、dns域名解析"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三、dns域名解析","aria-hidden":"true"}},[_._v("#")]),_._v(" 三、DNS域名解析")]),_._v(" "),r("p",[_._v("通常我们访问一个网站，使用的是主机名或者域名来进行访问的。因为相对于 IP 地址（一串数字），域名更容易让人记住。但 TCP/IP 协议使用的是 IP 地址进行访问的，所以必须有个机制或服务把域名转换成 IP 地址。 "),r("code",[_._v("DNS")]),_._v(" 服务就是用来解决这个问题的，它提供 "),r("code",[_._v("域名到 IP 地址之间的解析服务")]),_._v("。")]),_._v(" "),r("br"),_._v(" "),r("br"),_._v(" "),r("br"),_._v(" "),r("p",[r("img",{attrs:{src:t(472),alt:"DNS"}})]),_._v(" "),r("p",[_._v("简单来说，但我们通过域名访问一个网站的时候，通过会先通过 DNS， 然后将最终的 IP 地址返回给我们来进行访问。")]),_._v(" "),r("br"),_._v(" "),r("br"),_._v(" "),r("br"),_._v(" "),r("p",[_._v("从微观的角度来讲，为了提高效率，其实 DNS 的解析是有层次感的，本着就近的原则。")]),_._v(" "),r("ul",[r("li",[r("p",[_._v("1、首先，我们本地电脑，会将一些我们经常使用的域名及响应的 IP 地址建立一个对应关系，并且保存在系统文件里面。所以正常情况下，DNS 解析时，会先走系统的 host 文件，如果找到，就直接使用。")])]),_._v(" "),r("li",[r("p",[_._v("2、其次，我们会找本地的 DNS 服务器（是有限的），如果本地的 DNS 服务器找不到，那么本地的 DNS 会一层一层的向上一层的 DNS 服务器发送请求，直到 DNS 根服务器，找到就会回传。（以上不管是我们说过的 host 文件，本地 DNS 服务器，还是更高级的 DNS 服务器,还是根 DNS 服务器，目的就一个，就是把 DNS 服务器的服务做好）")])]),_._v(" "),r("li",[r("p",[_._v("3、如果都没有，那么首先会在 TCP/IP 参数里面设置的首选 DNS 服务器，我们在配置网络的时候，经常会配置一个 DNS 服务器（例如 114.114.114.114），那么我们会首先找这个服务器，在这呢，我们叫它本地 DNS 服务器，那么这个服务器在收到查询时，如果要查询域名包含在本地配置区域资源里面，就会返回给客户机。如果本地 DNS 服务器，本地区域文件的缓存解析都失效的话，这个时候就会根据本地的 DNS 服务器的设置，这里面有一个设置（叫是否设置转发进行查询），如果没有转发模式，那本地 DNS 就直接把请求发送到十三台根 DNS 服务器，一台一台的找。如果设置了，那么就会一层一层一层的向上寻找，直到返回为止。")])])]),_._v(" "),r("br"),_._v(" "),r("br"),_._v(" "),r("br"),_._v(" "),r("p",[_._v("例子:\n我有一个好久好久没有见过的朋友，当我想联系它的时候，我想先找到她的手机号。")]),_._v(" "),r("ul",[r("li",[r("p",[_._v("1、现在脑子里找，看能不能记得住。")])]),_._v(" "),r("li",[r("p",[_._v("2、如果想不起来，就打开手机，打开手机通讯录。")])]),_._v(" "),r("li",[r("p",[_._v("3、于是找最近的，也就是楼下的运营商服务点（首选的 DNS 服务器），查一下，也没找到")]),_._v(" "),r("ul",[r("li",[r("p",[_._v("1、我们直接打给最顶级打的运营商总部，让它帮我查一查（没有设置转发）")])]),_._v(" "),r("li",[r("p",[_._v("2、我们去找区、市、省服务点，一直往上找，最后到最顶级，找到为止（设置了转发）。")])])])])]),_._v(" "),r("br"),_._v(" "),r("br"),_._v(" "),r("p",[_._v("这里只是简单的了解一下 DNS，其实其内部还是非常复杂的。")]),_._v(" "),r("br"),_._v(" "),r("br"),_._v(" "),r("br"),_._v(" "),r("p",[_._v("CDN 和 DNS 之间的关系？")]),_._v(" "),r("p",[_._v("CDN（Content Delivery Network，即内容分发网络）其目的是通过在现有的Internet中增加一层新的CACHE(缓存)层，将网站的内容发布到最接近用户的网络”边缘“的节点，使用户可以就近取得所需的内容，提高用户访问网站的响应速度。")]),_._v(" "),r("p",[_._v("简单来说就是在 DNS 之上挂载 CDN，先有 CDN 来进行内容的分发，根据网络所在的区域去访问该用那边的服务器，在通过 DNS 服务器返回结果。")]),_._v(" "),r("h2",{attrs:{id:"四、回溯http事务处理过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四、回溯http事务处理过程","aria-hidden":"true"}},[_._v("#")]),_._v(" 四、回溯HTTP事务处理过程")]),_._v(" "),r("p",[r("img",{attrs:{src:t(473),alt:"HTTP"}})]),_._v(" "),r("p",[_._v("简单来说，当客户端访问 WEB 站点时，首先会通过 DNS 服务器查询到域名的 IP 地址。然后浏览器生成 HTTP请求，并通过 TCP/IP 协议发送给 WEB 服务器。Web 服务器接收到请求后，会根据请求生成响应内容，并通过 TCP/IP 协议返回给客户端。")]),_._v(" "),r("br"),_._v(" "),r("br"),_._v(" "),r("br"),_._v(" "),r("p",[r("img",{attrs:{src:t(474),alt:"HTTP"}})]),_._v(" "),r("ul",[r("li",[r("p",[_._v("当我们用浏览器访问一个页面，那么就要从中分解我们的协议名、主机名、端口、对象路径、......")])]),_._v(" "),r("li",[r("p",[_._v("我们得到的协议是 HTTP 协议，主机是百度主机，端口是 80 端口，对象路径是百度的根节点")])]),_._v(" "),r("li",[r("p",[_._v("在这一步，我们就需要通过 DNS 来解析出它的 ip 地址")])]),_._v(" "),r("li",[r("p",[_._v("封装 HTTP 请求的数据包，把以上信息结合本机自己的信息封装成一个 HTTP 请求的数据包")])]),_._v(" "),r("li",[r("p",[_._v("HTTP 协议是最上层的应用层，这时需要交给下层的传输层，所以我们在把这个包封装成 TCP 包")])]),_._v(" "),r("li",[r("p",[_._v("建立 TCP 链接，这样就是我们 TCP 的三次握手")])])]),_._v(" "),r("p",[_._v("在 HTTP 开始工作之前，客户机先要通过网络与服务器进行连接，这个连接就是 TCP 来完成的。这个协议与 IP 协议共同构建了我们整个的互联网，也就是 TCP/IP 协议族，所以我们的互联网也有人称之为 TCP/IP。")]),_._v(" "),r("p",[_._v("因为 HTTP 是比 TCP 更高层次的，所有只有第一层协议建立以后，才能进行更高层次的连接，所以我们这个时候要先建立 TCP 连接，接下来我们发送请求，建立链接以后，客户端发送一个请求给服务器，然后请求方式的格式就是 HTTP 的一个格式，然后服务器来进行响应，这就到达我们响应的报文，响应以后呢，这个过程里面，它的消息里面，消息体里面会有（状态码，协议版本号，成功或失败的代码，Mac 信息，服务器信息，实体信息，....），当 WEB 浏览器向服务器发送请求数据，最后会关闭释放掉。")])])},[],!1,null,null,null);v.default=a.exports},466:function(_,v,t){_.exports=t.p+"assets/img/http_1.ce3fa0ed.jpg"},467:function(_,v,t){_.exports=t.p+"assets/img/tcp_ip_1.3327dc79.jpg"},468:function(_,v,t){_.exports=t.p+"assets/img/tcp_ip_2.82ada9e3.png"},469:function(_,v,t){_.exports=t.p+"assets/img/tcp_ip_3.3d2420ec.png"},470:function(_,v,t){_.exports=t.p+"assets/img/tcp_ip_4.7a3004c4.jpg"},471:function(_,v,t){_.exports=t.p+"assets/img/tcp_ip_5.af3b76f4.png"},472:function(_,v,t){_.exports=t.p+"assets/img/dns.84feb4ed.png"},473:function(_,v,t){_.exports=t.p+"assets/img/http_2.058a7bb3.png"},474:function(_,v,t){_.exports=t.p+"assets/img/http_3.7c837b2a.jpg"}}]);