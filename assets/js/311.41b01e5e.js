(window.webpackJsonp=window.webpackJsonp||[]).push([[311],{1134:function(s,t,a){"use strict";a.r(t);var e=a(19),n=Object(e.a)({},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型","aria-hidden":"true"}},[s._v("#")]),s._v(" 数据类型")]),s._v(" "),a("p",[s._v("JavaScript 中的值都具有特定的类型。例如，字符串或数字。")]),s._v(" "),a("p",[s._v("在 JavaScript 中有 8 种基本的数据类型（译注：7 种原始类型和 1 种引用类型）。在这里，我们将对它们进行大体的介绍，在下一章中，我们将详细讨论它们。")]),s._v(" "),a("p",[s._v("我们可以将任何类型的值存入变量。例如，一个变量可以在前一刻是个字符串，下一刻就存储一个数字：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 没有错误")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" message "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nmessage "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("123456")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("允许这种操作的编程语言，例如 JavaScript，被称为 "),a("code",[s._v("“动态类型”（dynamically typed）")]),s._v(" 的编程语言，意思是虽然编程语言中有不同的数据类型，但是你定义的变量并不会在定义后，被限制为某一数据类型。")]),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("h2",{attrs:{id:"number-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#number-类型","aria-hidden":"true"}},[s._v("#")]),s._v(" Number 类型")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nn "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12.345")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("number 类型代表整数和浮点数。")]),s._v(" "),a("p",[s._v("数字可以有很多操作，比如，乘法 "),a("code",[s._v("*")]),s._v("、除法 "),a("code",[s._v("/")]),s._v("、加法 "),a("code",[s._v("+")]),s._v("、减法 "),a("code",[s._v("-")]),s._v(" 等等。")]),s._v(" "),a("p",[s._v("除了常规的数字，还包括所谓的 “特殊数值（'special numeric values'）” 也属于这种类型："),a("code",[s._v("Infinity")]),s._v("、"),a("code",[s._v("-Infinity")]),s._v(" 和 "),a("code",[s._v("NaN")]),s._v("。")]),s._v(" "),a("br"),s._v(" "),a("ul",[a("li",[a("code",[s._v("Infinity")]),s._v(" 代表数学概念中的 "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Infinity",target:"_blank",rel:"noopener noreferrer"}},[s._v("无穷大 ∞"),a("OutboundLink")],1),s._v("。是一个比任何数字都大的特殊值。")])]),s._v(" "),a("p",[s._v("我们可以通过除以 0 来得到它：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Infinity")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("或者在代码中直接使用它：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("Infinity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Infinity")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("br"),s._v(" "),a("ul",[a("li",[a("code",[s._v("NaN")]),s._v(" 代表一个计算错误。它是一个不正确的或者一个未定义的数学操作所得到的结果，比如：")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"not a number"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// NaN，这样的除法是错误的")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("code",[s._v("NaN")]),s._v(" 是粘性的。任何对 "),a("code",[s._v("NaN")]),s._v(" 的进一步操作都会返回 "),a("code",[s._v("NaN")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"not a number"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// NaN")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("所以，如果在数学表达式中有一个 "),a("code",[s._v("NaN")]),s._v("，会被传播到最终结果。")]),s._v(" "),a("br"),s._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",[a("strong",[s._v("数学运算是安全的")])]),s._v(" "),a("p",[s._v("在 JavaScript 中做数学运算是安全的。我们可以做任何事：除以 0，将非数字字符串视为数字，等等。")]),s._v(" "),a("p",[s._v("脚本永远不会因为一个致命的错误（“死亡”）而停止。最坏的情况下，我们会得到 "),a("code",[s._v("NaN")]),s._v(" 的结果。")])]),s._v(" "),a("p",[s._v("特殊的数值属于 “number” 类型。当然，对“特殊的数值”这个词的一般认识是，它们并不是数字")]),s._v(" "),a("p",[s._v("我们将在 "),a("router-link",{attrs:{to:"/learn_javascript_asdiasdkc/one/wergfhgfhk/02/"}},[s._v("数字类型")]),s._v(" 中获取数字的更多细节。")],1),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("h2",{attrs:{id:"bigint-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bigint-类型","aria-hidden":"true"}},[s._v("#")]),s._v(" BigInt 类型")]),s._v(" "),a("p",[s._v("在 JavaScript 中，“number” 类型无法表示大于 "),a("code",[s._v("(253-1)")]),s._v("（即 "),a("code",[s._v("9007199254740991")]),s._v("），或小于 "),a("code",[s._v("-(253-1)")]),s._v(" 的整数。这是其内部表示形式导致的技术限制。")]),s._v(" "),a("p",[s._v("在大多数情况下，这个范围就足够了，但有时我们需要很大的数字，例如用于加密或微秒精度的时间戳。")]),s._v(" "),a("p",[a("code",[s._v("BigInt")]),s._v(" 类型是最近被添加到 JavaScript 语言中的，用于表示任意长度的整数。")]),s._v(" "),a("p",[s._v("可以通过将 "),a("code",[s._v("n")]),s._v(" 附加到整数字段的末尾来创建 "),a("code",[s._v("BigInt")]),s._v(" 值。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 尾部的 "n" 表示这是一个 BigInt 类型')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" bigInt "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1234567890123456789012345678901234567890n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("br"),s._v(" "),a("p",[s._v("由于很少需要 "),a("code",[s._v("BigInt")]),s._v(" 类型的数字，我们在这没有对其进行讲解，我们在单独的章节 "),a("router-link",{attrs:{to:"/learn_javascript_asdiasdkc/one/idortjeior/05/"}},[s._v("BigInt")]),s._v(" 中专门对其进行了介绍。当你需要使用那样的大数字的时候，可以去阅读该章节。")],1),s._v(" "),a("div",{staticClass:"warning custom-block"},[a("p",[a("strong",[s._v("兼容性问题")])]),s._v(" "),a("p",[s._v("目前 Firefox/Chrome/Edge/Safari 已经支持 "),a("code",[s._v("BigInt")]),s._v(" 了，但 IE 还没有。")])]),s._v(" "),a("p",[s._v("你可以查看 "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt#browser_compatibility",target:"_blank",rel:"noopener noreferrer"}},[s._v("MDN BigInt"),a("OutboundLink")],1),s._v(" 兼容性表 以了解哪些版本的浏览器已经支持 BigInt 了。")]),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("h2",{attrs:{id:"string-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-类型","aria-hidden":"true"}},[s._v("#")]),s._v(" String 类型")]),s._v(" "),a("p",[s._v("JavaScript 中的字符串必须被括在引号里。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" str2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Single quotes are ok too'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" phrase "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token string"}},[s._v("`can embed another ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("${")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("br"),s._v(" "),a("p",[s._v("在 JavaScript 中，有三种包含字符串的方式。")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("双引号："),a("code",[s._v('"Hello"')])])]),s._v(" "),a("li",[a("p",[s._v("单引号："),a("code",[s._v("'Hello'")])])]),s._v(" "),a("li",[a("p",[s._v("反引号："),a("code",[s._v("Hello")])])])]),s._v(" "),a("br"),s._v(" "),a("p",[s._v("双引号和单引号都是“简单”引用，在 JavaScript 中两者几乎没有什么差别。")]),s._v(" "),a("p",[s._v("反引号是 "),a("strong",[s._v("功能扩展")]),s._v(" 引号。它们允许我们通过将变量和表达式包装在 "),a("code",[s._v("${…}")]),s._v(" 中，来将它们嵌入到字符串中。例如：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"John"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 嵌入一个变量")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token string"}},[s._v("`Hello, ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("${")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("!`")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Hello, John!")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 嵌入一个表达式")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token string"}},[s._v("`the result is ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("${")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("`")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// the result is 3")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[a("code",[s._v("${…}")]),s._v(" 内的表达式会被计算，计算结果会成为字符串的一部分。可以在 "),a("code",[s._v("${…}")]),s._v(" 内放置任何东西：诸如名为 "),a("code",[s._v("name")]),s._v(" 的变量，或者诸如 "),a("code",[s._v("1 + 2")]),s._v(" 的算数表达式，或者其他一些更复杂的。")]),s._v(" "),a("br"),s._v(" "),a("p",[s._v("需要注意的是，这仅仅在反引号内有效，其他引号不允许这种嵌入。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// the result is ${1 + 2}（使用双引号则不会计算 ${…} 中的内容）")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"the result is ${1 + 2}"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("我们会在 "),a("router-link",{attrs:{to:"/learn_javascript_asdiasdkc/one/wergfhgfhk/03/"}},[s._v("字符串")]),s._v(" 一节中学习字符串的更多细节。")],1),s._v(" "),a("br"),s._v(" "),a("div",{staticClass:"warning custom-block"},[a("p",[a("strong",[s._v("JavaScript 中没有 character 类型。")])]),s._v(" "),a("p",[s._v("在一些语言中，单个字符有一个特殊的 “character” 类型，在 C 语言和 Java 语言中被称为 “char”。")]),s._v(" "),a("p",[s._v("在 JavaScript 中没有这种类型。只有一种 "),a("code",[s._v("string")]),s._v(" 类型，一个字符串可以包含零个（为空）、一个或多个字符。")])]),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("h2",{attrs:{id:"boolean-类型-逻辑类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#boolean-类型-逻辑类型","aria-hidden":"true"}},[s._v("#")]),s._v(" Boolean 类型 ( 逻辑类型 )")]),s._v(" "),a("p",[s._v("boolean 类型仅包含两个值："),a("code",[s._v("true")]),s._v(" 和 "),a("code",[s._v("false")]),s._v("。")]),s._v(" "),a("p",[s._v("这种类型通常用于存储表示 yes 或 no 的值："),a("code",[s._v("true")]),s._v(" 意味着 “yes，正确”，"),a("code",[s._v("false")]),s._v(" 意味着 “no，不正确”。")]),s._v(" "),a("p",[s._v("比如：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" nameFieldChecked "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// yes, name field is checked")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" ageFieldChecked "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// no, age field is not checked")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("br"),s._v(" "),a("p",[s._v("布尔值也可作为比较的结果：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" isGreater "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" isGreater "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// true（比较的结果是 "yes"）')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("更详细的内容将会在 "),a("router-link",{attrs:{to:"/learn_javascript_asdiasdkc/one/cvdfsdreew/11/"}},[s._v("逻辑运算符")]),s._v(" 一节中介绍。")],1),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("h2",{attrs:{id:"null-值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#null-值","aria-hidden":"true"}},[s._v("#")]),s._v(' "null" 值')]),s._v(" "),a("p",[s._v("特殊的 "),a("code",[s._v("null")]),s._v(" 值不属于上述任何一种类型。")]),s._v(" "),a("p",[s._v("它构成了一个独立的类型，只包含 "),a("code",[s._v("null")]),s._v(" 值：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("相对比较于其他编程语言，JavaScript 中的 "),a("code",[s._v("null")]),s._v(' 不是一个 "对不存在的 '),a("code",[s._v("Object")]),s._v(' 的引用" 或者 "null 指针"。')]),s._v(" "),a("p",[s._v("JavaScript 中的 "),a("code",[s._v("null")]),s._v(' 仅仅是一个代表 "无"、"空"、"值未知" 的特殊值。')]),s._v(" "),a("p",[s._v("上面的代码表示 "),a("strong",[s._v("age")]),s._v(" 是未知的。")]),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("h2",{attrs:{id:"undefined-值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#undefined-值","aria-hidden":"true"}},[s._v("#")]),s._v(' "undefined" 值')]),s._v(" "),a("p",[s._v("特殊值 "),a("code",[s._v("undefined")]),s._v(" 和 "),a("code",[s._v("null")]),s._v(" 一样自成类型。")]),s._v(" "),a("p",[a("code",[s._v("undefined")]),s._v(" 的含义是 "),a("strong",[s._v("未被赋值")]),s._v("。")]),s._v(" "),a("p",[s._v("如果一个变量已被声明，但未被赋值，那么它的值就是 "),a("code",[s._v("undefined")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 弹出 "undefined"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("br"),s._v(" "),a("p",[s._v("从技术上讲，可以显式地将 "),a("code",[s._v("undefined")]),s._v(" 赋值给变量：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将值修改为 undefined")]),s._v("\nage "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "undefined"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("...... 但是不建议这样做。通常，使用 "),a("code",[s._v("null")]),s._v(' 将一个 "空" 或者 "未知" 的值写入变量中，而 '),a("code",[s._v("undefined")]),s._v(" 则保留作为未进行初始化的事物的默认初始值。")]),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("h2",{attrs:{id:"object-类型和-symbol-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#object-类型和-symbol-类型","aria-hidden":"true"}},[s._v("#")]),s._v(" object 类型和 symbol 类型")]),s._v(" "),a("p",[a("code",[s._v("object")]),s._v(" 类型是一个特殊的类型。")]),s._v(" "),a("p",[s._v('其他所有的数据类型都被称为 "原始类型"，因为它们的值只包含一个单独的内容（ 字符串、数字或者其他 ）。相反，'),a("code",[s._v("object")]),s._v(" 则用于储存数据集合和更复杂的实体。")]),s._v(" "),a("p",[s._v("因为它非常重要，所以我们对其进行单独讲解。在充分学习了原始类型后，我们将会在 "),a("router-link",{attrs:{to:"/learn_javascript_asdiasdkc/one/ioxcjvjcpp/01/"}},[s._v("对象")]),s._v(" 了解 "),a("code",[s._v("object")]),s._v("。")],1),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("h2",{attrs:{id:"typeof-运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#typeof-运算符","aria-hidden":"true"}},[s._v("#")]),s._v(" typeof 运算符")]),s._v(" "),a("p",[a("code",[s._v("typeof")]),s._v(" 运算符返回参数的类型。当我们想要分别处理不同类型值的时候，或者想快速进行数据类型检验时，非常有用。")]),s._v(" "),a("p",[s._v("它支持两种语法形式：")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("作为运算符: "),a("code",[s._v("typeof x")]),s._v("。")])]),s._v(" "),a("li",[a("p",[s._v("函数形式: "),a("code",[s._v("typeof(x)")])])])]),s._v(" "),a("br"),s._v(" "),a("p",[s._v("换而言之，有括号和没有括号，得到的结果是一样的。")]),s._v(" "),a("p",[s._v("对 "),a("code",[s._v("typeof x")]),s._v(" 的调用会以字符串的形式返回数据类型:")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[s._v(" ")]),a("br"),a("div",{staticClass:"highlighted"},[s._v(" ")]),a("br"),a("div",{staticClass:"highlighted"},[s._v(" ")]),a("br")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 'undefined'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "number"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10n")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "bigint"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "boolean"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"foo"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "string"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"id"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "symbol"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" Math "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "object"  (1)')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "object"  (2)')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" alert "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "function"  (3)')]),s._v("\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("p",[s._v("最后三行可能需要额外的说明：")]),s._v(" "),a("ol",[a("li",[a("p",[a("code",[s._v("Math")]),s._v(" 是一个提供数据运算的内建 "),a("code",[s._v("object")]),s._v("。会在 "),a("router-link",{attrs:{to:"/learn_javascript_asdiasdkc/one/wergfhgfhk/02/"}},[s._v("数字类型")]),s._v(" 中看到它。此处仅作为一个 "),a("code",[s._v("object")]),s._v(" 的示例。")],1)]),s._v(" "),a("li",[a("p",[a("code",[s._v("typeof null")]),s._v(" 的结果是 "),a("code",[s._v("object")]),s._v("。这是官方承认的 "),a("code",[s._v("typeof")]),s._v(" 的行为上的错误，这个问题来自于 JavaScript 语言的早期，并为了兼容性而保留了下来。"),a("code",[s._v("null")]),s._v(" 绝对不是一个 "),a("code",[s._v("object")]),s._v("。"),a("code",[s._v("null")]),s._v(" 有自己的类型，它是一个特殊值。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("typeof alert")]),s._v(" 的结果是 "),a("code",[s._v('"function"')]),s._v("，因为 "),a("code",[s._v("alert")]),s._v(' 在 JavaScript 语言中是一个函数。在下一章的学习函数，我们会了解到，在 JavaScript 语言中没有一个特别的 "function" 类型。函数隶属于 '),a("code",[s._v("object")]),s._v(" 类型。但是 "),a("code",[s._v("typeof")]),s._v(" 会对函数区分对待，并返回 "),a("code",[s._v('"function"')]),s._v("。这也是来自于 JavaScript 语言早期的问题。从技术上讲，这种行为是不正确的，但在实际编程中却非常方便。")])])]),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),a("p",[s._v("JavaScript 中又八种基本的数据类型（ 译注：前七种为基本数据类型，也称为原始类型，而 "),a("code",[s._v("object")]),s._v(" 为复杂数据类型 ）。")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("number")]),s._v(" 用于任何类型的数字：整数或浮点数，在 "),a("code",[s._v("±(253-1)")]),s._v(" 范围内的整数。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("bigint")]),s._v(" 用于任意长度的整数。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("string")]),s._v(" 用于字符串：一个字符串可以包含 0 个或多个字符，所以没有单独的单字符类型。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("boolean")]),s._v(" 用于 "),a("code",[s._v("true")]),s._v(" 和 "),a("code",[s._v("false")]),s._v("。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("null")]),s._v(" 用于未知的值 —— 只有一个 "),a("code",[s._v("null")]),s._v(" 值的独立类型。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("undefined")]),s._v(" 用于未定义的值 —— 只有一个 "),a("code",[s._v("undefined")]),s._v(" 值的独立类型。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("symbol")]),s._v(" 用于唯一的标识符。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("object")]),s._v(" 用于更复杂的数据结构。")])])]),s._v(" "),a("br"),s._v(" "),a("ul",[a("li",[a("p",[s._v("两种形式："),a("code",[s._v("typeof x")]),s._v(" 或者 "),a("code",[s._v("typeof(x)")]),s._v("。")])]),s._v(" "),a("li",[a("p",[s._v("以字符串的形式返回类型名称，例如 "),a("code",[s._v('"string"')]),s._v("。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("typeof null")]),s._v(" 会返回 "),a("code",[s._v('"object"')]),s._v(" —— 这是 JavaScript 编程语言的一个错误，实际上它并不是一个 "),a("code",[s._v("object")]),s._v("。")])])])])},[],!1,null,null,null);t.default=n.exports}}]);