(window.webpackJsonp=window.webpackJsonp||[]).push([[444],{1248:function(t,s,a){"use strict";a.r(s);var n=a(19),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念","aria-hidden":"true"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("p",[t._v("继承是 "),a("code",[t._v("java")]),t._v(" 面向对象编程技术的一块基石，因为它允许创建分等级层次的类。")]),t._v(" "),a("p",[t._v("继承就是 "),a("strong",[t._v("子类")]),t._v(" 继承 "),a("strong",[t._v("父类")]),t._v(" 的特征和行为，使得子类对象（实例）具有父类的实例域和方法，或子类从父类继承方法，使得子类具有父类相同的行为。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("一种类与类之间的关系")])]),t._v(" "),a("li",[a("p",[t._v("使用已存在的类的定义作为基础建立新类")])]),t._v(" "),a("li",[a("p",[t._v("新类的定义可以增加新的属性、方法，也可以同父类的属性、方法，但是不能选择性地继承父类")])]),t._v(" "),a("li",[a("p",[t._v("父类（超类、基类）")])]),t._v(" "),a("li",[a("p",[t._v("子类（派生类）")])])]),t._v(" "),a("br"),t._v(" "),a("p",[a("strong",[t._v("继承的关系")])]),t._v(" "),a("p",[t._v('满足 "A is a B" 的关系就可以形成继承关系')]),t._v(" "),a("br"),t._v(" "),a("p",[a("strong",[t._v("继承的特性")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("子类拥有父类非 private 的属性、方法")])]),t._v(" "),a("li",[a("p",[t._v("子类可以拥有自己的属性和方法，即子类可以对父类进行扩展。")])]),t._v(" "),a("li",[a("p",[t._v("子类可以用自己的方式实现父类的方法")])]),t._v(" "),a("li",[a("p",[t._v("Java 的继承是单继承，单继承就是一个子类只能继承一个父类，多重继承就是，例如 A 类继承 B 类，B 类继承 C 类，所以按照关系就是 C 类是 B 类的父类，B 类是 A 类的父类，这是 Java 继承区别于 C++ 继承的一个特性。")])]),t._v(" "),a("li",[a("p",[t._v("提高了类之间的耦合性（继承的缺点，耦合度高就会造成代码之间的联系越紧密，代码独立性越差）。")])])]),t._v(" "),a("br"),t._v(" "),a("br"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"继承实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#继承实现","aria-hidden":"true"}},[t._v("#")]),t._v(" 继承实现")]),t._v(" "),a("p",[t._v("通过 "),a("code",[t._v("extends")]),t._v(" 关键字")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 父类")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 子类(Cat) 继承 父类(Animal)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Cat")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 子类(Dog) 继承 父类(Animal)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Dog")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br")])]),a("br"),t._v(" "),a("br"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"重载-overload"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重载-overload","aria-hidden":"true"}},[t._v("#")]),t._v(" 重载 ( Overload )")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("在同一类中")])]),t._v(" "),a("li",[a("p",[t._v("方法名相同，参数列表必须改变（参数个数、类型、顺序 其中一个改变即可）")])]),t._v(" "),a("li",[a("p",[t._v("可以改变返回类型、访问修饰符；")])]),t._v(" "),a("li",[a("p",[t._v("与方法的参数名无关，如果两个方法仅仅是参数名不一样，参数类型、顺序、个数没有区别的话，这是无法构成重载的。也就是说，每个重载的方法（或者构造函数）都必须有一个独一无二的参数类型列表。")])]),t._v(" "),a("li",[a("p",[t._v("可以声明新的或更广的检查异常；")])])]),t._v(" "),a("br"),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" month"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" month"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这是不允许的")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 该方面与上面的方法仅仅是参数名不一样，参数类型、顺序、个数都一样，这是无法构成重载的。")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" month"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br")])]),a("br"),t._v(" "),a("br"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"重写-override"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重写-override","aria-hidden":"true"}},[t._v("#")]),t._v(" 重写 ( Override )")]),t._v(" "),a("ul",[a("li",[t._v("有继承关系的子类中")]),t._v(" "),a("li",[t._v("方法名相同，参数列表相同（参数顺序、个数、类型），方法返回值可以允许是子类类型")]),t._v(" "),a("li",[t._v("方法的访问范围需要大于等于父类的访问修饰符")]),t._v(" "),a("li",[t._v("与 参数名 无关")]),t._v(" "),a("li",[t._v("声明为 final 的方法不能被重写。")]),t._v(" "),a("li",[t._v("声明为 static 的方法不能被重写，但是能够被再次声明。")]),t._v(" "),a("li",[t._v("子类和父类在同一个包中，那么子类可以重写父类所有方法，除了声明为 private 和 final 的方法。")]),t._v(" "),a("li",[t._v("子类和父类不在同一个包中，那么子类只能够重写父类的声明为 public 和 protected 的非 final 方法。")]),t._v(" "),a("li",[t._v("重写的方法能够抛出任何非强制异常，无论被重写的方法是否抛出异常。但是，重写的方法不能抛出新的强制性异常，或者比被重写方法声明的更广泛的强制性异常，反之则可以。")]),t._v(" "),a("li",[t._v("构造方法不能被重写。")])]),t._v(" "),a("br"),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("move")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"动物可以移动"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Dog")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("move")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"狗可以跑和走"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TestDog")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Animal 对象")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Dog")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Dog 对象")]),t._v("\n\n      a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("move")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行 Animal 类的方法")]),t._v("\n      b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("move")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//执行 Dog 类的方法")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br")])]),a("p",[t._v("编译运行结果")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("动物可以移动\n狗可以跑和走\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("br"),t._v(" "),a("br"),t._v(" "),a("p",[a("strong",[t._v("重写与重载之间的区别")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("区别点")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("重载方法")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("重写方法")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("参数列表")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("必须修改")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("一定不能修改")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("返回类型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("可以修改")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("一定不能修改")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("异常")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("可以修改")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("可以减少或删除，一定不能抛出新的或者更广的异常")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("访问")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("可以修改")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("一定不能做更严格的限制（可以降低限制）")])])])]),t._v(" "),a("br"),t._v(" "),a("br"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"访问修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#访问修饰符","aria-hidden":"true"}},[t._v("#")]),t._v(" 访问修饰符")]),t._v(" "),a("blockquote",[a("p",[t._v("Java中，可以使用访问控制符来保护对类、变量、方法和构造方法的访问。Java 支持 4 种不同的访问权限。")])]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("default")]),t._v(" (即默认，什么也不写）:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("在同一包内可见，不使用任何修饰符。使用对象：类、接口、变量、方法。")])]),t._v(" "),a("li",[a("p",[t._v("使用默认访问修饰符声明的变量和方法，对同一个包内的类是可见的。")])]),t._v(" "),a("li",[a("p",[t._v("接口里的变量都隐式声明为 "),a("strong",[a("code",[t._v("public static final")])])])]),t._v(" "),a("li",[a("p",[t._v("而接口里的方法默认情况下访问权限为 "),a("strong",[a("code",[t._v("public")])]),t._v("。")])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("private")]),t._v(" (私有访问修饰符):")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("在同一类内可见。使用对象：变量、方法。 注意：不能修饰类（外部类）")])]),t._v(" "),a("li",[a("p",[t._v("私有访问修饰符是最严格的访问级别，所以被声明为 "),a("strong",[a("code",[t._v("private")])]),t._v(" 的方法、变量和构造方法只能被所属类访问。")])]),t._v(" "),a("li",[a("p",[t._v("并且类和接口不能声明为 "),a("strong",[a("code",[t._v("private")])]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("声明为私有访问类型的变量只能通过类中公共的 "),a("code",[t._v("getter")]),t._v(" 方法被外部类访问。")])]),t._v(" "),a("li",[a("p",[a("strong",[a("code",[t._v("private")])]),t._v(" 访问修饰符的使用主要用来隐藏类的实现细节和保护类的数据。")])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("public")]),t._v(" (公有访问修饰符):")]),t._v(" "),a("ul",[a("li",[t._v("对所有类可见。使用对象：类、接口、变量、方法")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("protected")]),t._v(" (受保护的访问修饰符):")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("对同一包内的类和所有子类可见。使用对象：变量、方法。 注意：不能修饰类（外部类）（内部类除外）。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("子类与基类在同一包中：")]),t._v(" 被声明为 "),a("strong",[a("code",[t._v("protected")])]),t._v(" 的变量、方法和构造器能被同一个包中的任何其他类访问；")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("子类与基类不在同一包中：")]),t._v(" 那么在子类中，子类实例可以访问其从基类继承而来的 "),a("strong",[a("code",[t._v("protected")])]),t._v(" 方法，而不能访问基类实例的 "),a("strong",[a("code",[t._v("protected")])]),t._v(" 方法。")])]),t._v(" "),a("li",[a("p",[t._v("接口及接口的成员变量和成员方法不能声明为 "),a("strong",[a("code",[t._v("protected")])])])])])])]),t._v(" "),a("br"),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("访问修饰符")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("当前类")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("同包")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("子孙类(同包)")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("子孙类(不同包)")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("其他类")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("private")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("️✔")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("default")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("protected")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔/✘")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("public")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("✔")])])])]),t._v(" "),a("br"),t._v(" "),a("br"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"super-关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#super-关键字","aria-hidden":"true"}},[t._v("#")]),t._v(" super 关键字")]),t._v(" "),a("p",[t._v("在代码中，我们怎么确定这个方法是继承父类的方法，还是自己重写的方法呢？")]),t._v(" "),a("p",[a("strong",[t._v("super")]),t._v("：代表父类引用")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("访问父类成员方法 super.eat()、访问父类属性 super.name、访问父类构造方法 super()。")])]),t._v(" "),a("li",[a("p",[t._v("this 和 super 不能共存。")])]),t._v(" "),a("li",[a("p",[t._v("子类构造默认调用父类无参构造方法。")])]),t._v(" "),a("li",[a("p",[t._v("如果子类构造方法中没有显式标注，则系统默认调用父类的无参构造方法。")])]),t._v(" "),a("li",[a("p",[t._v("可以通过super()调用父类允许被访问的其他构造方法。")])]),t._v(" "),a("li",[a("p",[t._v("super()调用父类指定构造方法时，必须放在子类构造方法有效代码第一行。")])])]),t._v(" "),a("p",[t._v("例")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Animal 类")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("eat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Dog 类")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Dog")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Dog")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("eat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("eat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里 super 代表父类引用")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// super('name') 可以通过 super(参数，参数，...) 来调用父类允许被访问的其他构造方法，")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Dog")]),t._v(" dog "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Dog")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n   dog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("eat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里的 eat 调用的是？")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br")])]),a("br"),t._v(" "),a("p",[a("strong",[t._v("this")]),t._v(": 当前类对象的引用")]),t._v(" "),a("ul",[a("li",[t._v("访问当前类的成员方法")]),t._v(" "),a("li",[t._v("访问当前类的成员属性")]),t._v(" "),a("li",[t._v("访问当前类的构造方法")]),t._v(" "),a("li",[t._v("不能再静态方法中使用")])]),t._v(" "),a("p",[a("strong",[t._v("super")]),t._v(": 父类对象的引用")]),t._v(" "),a("ul",[a("li",[t._v("访问父类的成员方法")]),t._v(" "),a("li",[t._v("访问父类的成员属性")]),t._v(" "),a("li",[t._v("访问父类的构造方法")]),t._v(" "),a("li",[t._v("不能再静态方法中使用")])]),t._v(" "),a("br"),t._v(" "),a("br"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"继承的初始化顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#继承的初始化顺序","aria-hidden":"true"}},[t._v("#")]),t._v(" 继承的初始化顺序")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"可可"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" month "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" species "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"动物"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" temp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" st1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" st2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printlln")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我是父类静态构造代码块'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printlln")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我是父类构造代码块'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 父类的构造不允许被继承、不允许被重写")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printlln")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我是父类无参构造方法'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Cat")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" weiget"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" st3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printlln")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我是子类静态构造代码块'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printlln")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我是子类构造代码块'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printlln")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我是子类无参构造方法'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Cat")]),t._v(" cat "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Cat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br"),a("span",{staticClass:"line-number"},[t._v("43")]),a("br"),a("span",{staticClass:"line-number"},[t._v("44")]),a("br")])]),a("br"),t._v(" "),a("br"),t._v(" "),a("ul",[a("li",[a("p",[t._v("1、new 类")])]),t._v(" "),a("li",[a("p",[t._v("2、"),a("strong",[t._v("父类")]),t._v(" 静态成员初始化、赋值")])]),t._v(" "),a("li",[a("p",[t._v("3、"),a("strong",[t._v("父类")]),t._v(" 静态代码块执行")])]),t._v(" "),a("li",[a("p",[t._v("4、"),a("strong",[t._v("子类")]),t._v(" 静态成员初始化、赋值")])]),t._v(" "),a("li",[a("p",[t._v("5、"),a("strong",[t._v("子类")]),t._v(" 静态代码块执行")])]),t._v(" "),a("li",[a("p",[t._v("6、在进行 "),a("strong",[t._v("new")]),t._v(" 的实例化")])]),t._v(" "),a("li",[a("p",[t._v("7、上面的代码中，是实例化了一个 "),a("strong",[t._v("Cat")]),t._v(";")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("这时就会进入 "),a("strong",[t._v("Cat")]),t._v(" 的无参构造方法中。")])]),t._v(" "),a("li",[a("p",[t._v("这时发现 "),a("strong",[t._v("Cat")]),t._v(" 有个父类 "),a("strong",[t._v("Animal")]),t._v("，这时就会进入 "),a("strong",[t._v("Animal")]),t._v(" 的无参构造方法中。")])]),t._v(" "),a("li",[a("p",[t._v("这时发现 "),a("strong",[t._v("Animal")]),t._v(" 又有个父类 "),a("strong",[t._v("Object")]),t._v("，这时就会进入 "),a("strong",[t._v("Object")]),t._v(" 中（每一个类都是 "),a("strong",[t._v("Object")]),t._v(" 的子类）。")])]),t._v(" "),a("li",[a("p",[t._v("然后会逐层返回到 "),a("strong",[t._v("Cat")]),t._v(" 进行实例操作，这时，这个对象就已经产生了，此时类中的相关信息都是默认值。")])])])]),t._v(" "),a("li",[a("p",[t._v("8、回到"),a("strong",[t._v("父类")]),t._v("中，去完成对父类属性的赋值操作")])]),t._v(" "),a("li",[a("p",[t._v("9、执行 "),a("strong",[t._v("父类")]),t._v(" 的构造代码块")])]),t._v(" "),a("li",[a("p",[t._v("10、执行 "),a("strong",[t._v("父类")]),t._v(" 的构造方法")])]),t._v(" "),a("li",[a("p",[t._v("11、"),a("strong",[t._v("子类")]),t._v(" 的属性没有赋值操作，跳过")])]),t._v(" "),a("li",[a("p",[t._v("12、执行 "),a("strong",[t._v("子类")]),t._v(" 的构造代码块")])]),t._v(" "),a("li",[a("p",[t._v("13、执行 "),a("strong",[t._v("子类")]),t._v(" 的构造方法")])]),t._v(" "),a("li",[a("p",[t._v("14、最后，回到 "),a("strong",[t._v("new")]),t._v(" 调用处。")])])]),t._v(" "),a("br"),t._v(" "),a("br"),t._v(" "),a("br"),t._v(" "),a("p",[a("strong",[t._v("在满足继承条件的情况下，子类的初始化顺序")])]),t._v(" "),a("p",[t._v("首先，在我们执行程序的时候，会先完成类的加载，在加载的过程当中。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("优先加载父类的静态成员")])]),t._v(" "),a("li",[a("p",[t._v("然后加载子类的静态成员")])]),t._v(" "),a("li",[a("p",[t._v("然后在进行子类对象实例化的过程当中。")])]),t._v(" "),a("li",[a("p",[t._v("它会逐层的先去完成父类对象的加载（属性（赋值）、构造代码块、构造方法）")])]),t._v(" "),a("li",[a("p",[t._v("然后才会去完成子类对象的加载")])])]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",[t._v("访问修饰符不影响成员加载顺序，跟书写位置有关。谁在前，就先执行谁。")])]),t._v(" "),a("br"),t._v(" "),a("br"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"object-类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#object-类","aria-hidden":"true"}},[t._v("#")]),t._v(" Object 类")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("Object")]),t._v(" 类是所有类的父类。")])]),t._v(" "),a("li",[a("p",[t._v("一个类没有使用 "),a("code",[t._v("extends")]),t._v(" 关键字明确标识继承关系，则默认继承 "),a("code",[t._v("Object")]),t._v(" 类（ 包括数组 ）。")])]),t._v(" "),a("li",[a("p",[t._v("Java 中的每个类都可以使用 "),a("code",[t._v("Object")]),t._v(" 中定义的方法。")])])]),t._v(" "),a("br"),t._v(" "),a("br"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"final"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#final","aria-hidden":"true"}},[t._v("#")]),t._v(" final")]),t._v(" "),a("blockquote",[a("p",[t._v('final 表示"最后的、最终的"含义，变量一旦赋值后，不能被重新赋值。')])]),t._v(" "),a("p",[t._v("使用 final 修饰符可以提高性能，但会降低可扩展性。")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[a("code",[t._v("final + 类")])])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("final")]),t._v(" 类不能被继承，没有类能够继承 final 类的任何特性。")])])]),t._v(" "),a("li",[a("p",[a("strong",[a("code",[t._v("final + 属性")])])]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("方法内部的局部变量")]),t._v("：在使用之前被初始化赋值即可。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("类中成员属性")]),t._v("：只能在定义时、或者构造代码块、构造方法中进行初始化赋值。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("基本数据类型变量")]),t._v("：初始赋值之后不能更改。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("引用类型的变量")]),t._v("：初始化之后不能再指向另一个对象，但指向的对象的内容是可变的。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("final")]),t._v(" 修饰符通常和 "),a("code",[t._v("static")]),t._v(" 修饰符一起使用来创建类常量。")])])])]),t._v(" "),a("li",[a("p",[a("strong",[a("code",[t._v("final + 方法")])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("父类中的 "),a("code",[t._v("final")]),t._v(" 方法可以被子类继承，但是不能被子类重写。")])]),t._v(" "),a("li",[a("p",[t._v("声明 "),a("code",[t._v("final")]),t._v(" 方法的主要目的是防止该方法的内容被修改。")])]),t._v(" "),a("li",[a("p",[t._v("不能修饰构造方法")])])])])]),t._v(" "),a("br"),t._v(" "),a("br"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"注解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注解","aria-hidden":"true"}},[t._v("#")]),t._v(" 注解")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("JDK1.5 版本引入的一个特性")])]),t._v(" "),a("li",[a("p",[t._v("可以声明在包、类、属性、方法、局部变量、方法参数等的前面，用来对这些元素进行说明、注释")])])]),t._v(" "),a("p",[t._v("注解分类")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("按照运行机制")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("源码注解")]),t._v("：注解只在源码中存在，编译成 .class 文件就不存在了。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("编译时注解")]),t._v("：注释在源码和 .class 文件中都存在")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("运行时注解")]),t._v("：在运行阶段还起作用，甚至会影响运行逻辑的注解")])])])]),t._v(" "),a("li",[a("p",[t._v("按照来源分")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("来自 JDK 的注解")])]),t._v(" "),a("li",[a("p",[t._v("来自第三方的注解")])]),t._v(" "),a("li",[a("p",[t._v("我们自己定义的注解")])])])])]),t._v(" "),a("p",[t._v("元注解（主要用来对注解进行注释的）")])])},[],!1,null,null,null);s.default=e.exports}}]);