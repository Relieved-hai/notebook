(window.webpackJsonp=window.webpackJsonp||[]).push([[153],{1145:function(t,s,e){"use strict";e.r(s);var a=e(19),n=Object(a.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"原型方法，没有-proto-的对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原型方法，没有-proto-的对象","aria-hidden":"true"}},[t._v("#")]),t._v(" 原型方法，没有 "),a("strong",[t._v("proto")]),t._v(" 的对象")]),t._v(" "),a("p",[t._v("在这部分内容的第一章中，我们提到了设置原型的现代方法。")]),t._v(" "),a("p",[a("code",[t._v("__proto__")]),t._v(" 被认为是过时且不推荐使用的（deprecated），这里的不推荐使用是指 JavaScript 规范中规定，"),a("strong",[t._v("proto")]),t._v(" 必须仅在浏览器环境下才能得到支持。")]),t._v(" "),a("p",[t._v("现代的方法有：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/create",target:"_blank",rel:"noopener noreferrer"}},[t._v("Object.create(proto, [descriptors])"),a("OutboundLink")],1),t._v(" —— 利用给定的 "),a("code",[t._v("proto")]),t._v(" 作为 "),a("code",[t._v("[[Prototype]]")]),t._v(" 和可选的属性描述来创建一个空对象。")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf",target:"_blank",rel:"noopener noreferrer"}},[t._v("Object.getPrototypeOf(obj)"),a("OutboundLink")],1),t._v(" —— 返回对象 "),a("code",[t._v("obj")]),t._v(" 的 "),a("code",[t._v("[[Prototype]]")]),t._v("。")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf",target:"_blank",rel:"noopener noreferrer"}},[t._v("Object.setPrototypeOf(obj, proto)"),a("OutboundLink")],1),t._v(" —— 将对象 "),a("code",[t._v("obj")]),t._v(" 的 "),a("code",[t._v("[[Prototype]]")]),t._v(" 设置为 "),a("code",[t._v("proto")]),t._v("。")])]),t._v(" "),a("p",[t._v("应该使用这些方法来代替 "),a("code",[t._v("__proto__")]),t._v("。")]),t._v(" "),a("p",[t._v("例如：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" animal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  eats"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个以 animal 为原型的新对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" rabbit "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("animal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rabbit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eats"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrototypeOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rabbit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" animal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setPrototypeOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rabbit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将 rabbit 的原型修改为 {}")]),t._v("\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("p",[a("code",[t._v("Object.create")]),t._v(" 有一个可选的第二参数：属性描述器。我们可以在此处为新对象提供额外的属性，就像这样：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" animal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  eats"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" rabbit "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("animal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  jumps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rabbit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jumps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("p",[t._v("描述器的格式与 "),a("router-link",{attrs:{to:"/learn_javascript_asdiasdkc/one/mncmvneqwe/01/"}},[t._v("属性标志和属性描述符")]),t._v(" 一章中所讲的一样。")],1),t._v(" "),a("p",[t._v("我们可以使用 "),a("code",[t._v("Object.create")]),t._v(" 来实现比复制 "),a("code",[t._v("for..in")]),t._v(" 循环中的属性更强大的对象克隆方式：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" clone "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrototypeOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOwnPropertyDescriptors")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("此调用可以对 "),a("code",[t._v("obj")]),t._v(" 进行真正准确地拷贝，包括所有的属性：可枚举和不可枚举的，数据属性和 setters/getters —— 包括所有内容，并带有正确的 "),a("code",[t._v("[[Prototype]]")]),t._v("。")]),t._v(" "),a("br"),t._v(" "),a("br"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"原型简史"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原型简史","aria-hidden":"true"}},[t._v("#")]),t._v(" 原型简史")]),t._v(" "),a("p",[t._v("如果我们数一下有多少种处理 "),a("code",[t._v("[[Prototype]]")]),t._v(" 的方式，答案是有很多！很多种方法做的都是同一件事儿！")]),t._v(" "),a("p",[t._v("为什么会出现这种情况？")]),t._v(" "),a("p",[t._v("这是历史原因。")]),t._v(" "),a("ul",[a("li",[t._v("构造函数的 "),a("code",[t._v('"prototype"')]),t._v(" 属性自古以来就起作用。")]),t._v(" "),a("li",[t._v("之后，在 2012 年，"),a("code",[t._v("Object.create")]),t._v(" 出现在标准中。它提供了使用给定原型创建对象的能力。但没有提供 get/set 它的能力。因此，许多浏览器厂商实现了非标准的 "),a("code",[t._v("__proto__")]),t._v(" 访问器，该访问器允许用户随时 get/set 原型。")]),t._v(" "),a("li",[t._v("之后，在 2015 年，"),a("code",[t._v("Object.setPrototypeOf")]),t._v(" 和 "),a("code",[t._v("Object.getPrototypeOf")]),t._v(" 被加入到标准中，执行与 "),a("code",[t._v("__proto__")]),t._v(" 相同的功能。由于 "),a("code",[t._v("__proto__")]),t._v(" 实际上已经在所有地方都得到了实现，但它已过时，所以被加入到该标准的附件 B 中，即：在非浏览器环境下，它的支持是可选的。")])]),t._v(" "),a("p",[t._v("目前为止，我们拥有了所有这些方式。")]),t._v(" "),a("br"),t._v(" "),a("p",[t._v("为什么将 "),a("code",[t._v("__proto__")]),t._v(" 替换成函数 "),a("code",[t._v("getPrototypeOf/setPrototypeOf")]),t._v("？这是一个有趣的问题，需要我们理解为什么 "),a("code",[t._v("__proto__")]),t._v(" 不好。继续阅读，你就会知道答案。")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",[a("strong",[t._v("如果速度很重要，就请不要修改已存在的对象的 "),a("code",[t._v("[[Prototype]]")])])]),t._v(" "),a("p",[t._v("从技术上来讲，我们可以在任何时候 get/set "),a("code",[t._v("[[Prototype]]")]),t._v("。但是通常我们只在创建对象的时候设置它一次，自那之后不再修改："),a("code",[t._v("rabbit")]),t._v(" 继承自 "),a("code",[t._v("animal")]),t._v("，之后不再更改。")]),t._v(" "),a("p",[t._v("并且，JavaScript 引擎对此进行了高度优化。用 "),a("code",[t._v("Object.setPrototypeOf")]),t._v(" 或 "),a("code",[t._v("obj.__proto__=")]),t._v(" "),a("strong",[t._v("“即时” 更改原型是一个非常缓慢的操作")]),t._v("，因为它破坏了对象属性访问操作的内部优化。因此，除非你知道自己在做什么，或者 JavaScript 的执行速度对你来说完全不重要，否则请避免使用它。")])]),t._v(" "),a("br"),t._v(" "),a("br"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"very-plain-objects"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#very-plain-objects","aria-hidden":"true"}},[t._v("#")]),t._v(' "Very plain" objects')]),t._v(" "),a("p",[t._v("我们知道，对象可以用作关联数组（associative arrays）来存储键/值对。")]),t._v(" "),a("p",[t._v("……但是如果我们尝试在其中存储 "),a("strong",[t._v("用户提供的")]),t._v(" 键（例如：一个用户输入的字典），我们可以发现一个有趣的小故障：所有的键都正常工作，除了 "),a("code",[t._v('"__proto__"')]),t._v("。")]),t._v(" "),a("p",[t._v("看一下这个例子：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("prompt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"What\'s the key?"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"__proto__"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"some value"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// [object Object]，并不是 "some value"！')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("这里如果用户输入 "),a("code",[t._v("__proto__")]),t._v("，那么赋值会被忽略！")]),t._v(" "),a("p",[t._v("我们不应该对此感到惊讶。"),a("code",[t._v("__proto__")]),t._v(" 属性很特别：它必须是 "),a("code",[t._v("对象")]),t._v(" 或者 "),a("code",[t._v("null")]),t._v("。字符串不能成为 prototype。")]),t._v(" "),a("p",[t._v("但是我们不是 "),a("strong",[t._v("打算")]),t._v(" 实现这种行为，对吧？我们想要存储键值对，然而键名为 "),a("code",[t._v('"__proto__"')]),t._v(" 的键值对没有被正确存储。所以这是一个 bug。")]),t._v(" "),a("p",[t._v("在这里，后果并没有很严重。但是在其他情况下，我们可能会对对象进行赋值操作，然后原型可能就被更改了。结果，可能会导致完全意想不到的结果。")]),t._v(" "),a("p",[t._v("最可怕的是 —— 通常开发者完全不会考虑到这一点。这让此类 bug 很难被发现，甚至变成漏洞，尤其是在 JavaScript 被用在服务端的时候。")]),t._v(" "),a("p",[t._v("为默认情况下为函数的 "),a("code",[t._v("toString")]),t._v(" 以及其他内建方法执行赋值操作，也会出现意想不到的结果。")]),t._v(" "),a("br"),t._v(" "),a("p",[t._v("我们怎么避免这样的问题呢？")]),t._v(" "),a("p",[t._v("首先，我们可以改用 "),a("code",[t._v("Map")]),t._v(" 来代替普通对象进行存储，这样一切都迎刃而解。")]),t._v(" "),a("p",[t._v("但是 "),a("code",[t._v("Object")]),t._v(" 在这里同样可以运行得很好，因为 JavaScript 语言的制造者很早就注意到了这个问题。")]),t._v(" "),a("p",[a("code",[t._v("__proto__")]),t._v(" 不是一个对象的属性，只是 "),a("code",[t._v("Object.prototype")]),t._v(" 的访问器属性：")]),t._v(" "),a("p",[a("img",{attrs:{src:e(532),alt:""}})]),t._v(" "),a("p",[t._v("因此，如果 "),a("code",[t._v("obj.__proto__")]),t._v(" 被读取或者赋值，那么对应的 getter/setter 会被从它的原型中调用，它会 set/get "),a("code",[t._v("[[Prototype]]")]),t._v("。")]),t._v(" "),a("p",[t._v("就像在本部分教程的开头所说的那样："),a("code",[t._v("__proto__")]),t._v(" 是一种访问 "),a("code",[t._v("[[Prototype]]")]),t._v(" 的方式，而不是 "),a("code",[t._v("[[prototype]]")]),t._v(" 本身。")]),t._v(" "),a("p",[t._v("现在，我们想要将一个对象用作关联数组，并且摆脱此类问题，我们可以使用一些小技巧：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("prompt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"What\'s the key?"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"__proto__"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"some value"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "some value"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[a("code",[t._v("Object.create(null)")]),t._v(" 创建了一个空对象，这个对象没有原型（"),a("code",[t._v("[[Prototype]]")]),t._v(" 是 "),a("code",[t._v("null")]),t._v("）：")]),t._v(" "),a("p",[a("img",{attrs:{src:e(533),alt:""}})]),t._v(" "),a("p",[t._v("因此，它没有继承 "),a("code",[t._v("__proto__")]),t._v(" 的 getter/setter 方法。现在，它被作为正常的数据属性进行处理，因此上面的这个示例能够正常工作。")]),t._v(" "),a("p",[t._v("我们可以把这样的对象称为 “very plain” 或 “pure dictionary” 对象，因为它们甚至比通常的普通对象（plain object）"),a("code",[t._v("{...}")]),t._v(" 还要简单。")]),t._v(" "),a("p",[t._v("缺点是这样的对象没有任何内建的对象的方法，例如 "),a("code",[t._v("toString")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("div",{staticClass:"highlight-lines"},[a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Error (no toString)")]),t._v("\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("……但是它们通常对关联数组而言还是很友好。")]),t._v(" "),a("p",[t._v("请注意，大多数与对象相关的方法都是 "),a("code",[t._v("Object.something(...)")]),t._v("，例如 "),a("code",[t._v("Object.keys(obj)")]),t._v(" —— 它们不在 prototype 中，因此在 “very plain” 对象中它们还是可以继续使用：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" chineseDictionary "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nchineseDictionary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hello "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"你好"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nchineseDictionary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bye "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"再见"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chineseDictionary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// hello,bye")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("br"),t._v(" "),a("br"),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("设置和直接访问原型的现代方法有：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/create",target:"_blank",rel:"noopener noreferrer"}},[t._v("Object.create(proto, [descriptors])"),a("OutboundLink")],1),t._v(" —— 利用给定的 "),a("code",[t._v("proto")]),t._v(" 作为 "),a("code",[t._v("[[Prototype]]")]),t._v("（可以是 "),a("code",[t._v("null")]),t._v("）和可选的属性描述来创建一个空对象。")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf",target:"_blank",rel:"noopener noreferrer"}},[t._v("Object.getPrototypeOf(obj)"),a("OutboundLink")],1),t._v(" —— 返回对象 "),a("code",[t._v("obj")]),t._v(" 的 "),a("code",[t._v("[[Prototype]]")]),t._v("（与 "),a("code",[t._v("__proto__")]),t._v(" 的 getter 相同）。")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf",target:"_blank",rel:"noopener noreferrer"}},[t._v("Object.setPrototypeOf(obj, proto)"),a("OutboundLink")],1),t._v(" —— 将对象 "),a("code",[t._v("obj")]),t._v(" 的 "),a("code",[t._v("[[Prototype]]")]),t._v(" 设置为 "),a("code",[t._v("proto")]),t._v("（与 "),a("code",[t._v("__proto__")]),t._v(" 的 setter 相同）。")])]),t._v(" "),a("br"),t._v(" "),a("p",[t._v("如果要将一个用户生成的键放入一个对象，那么内建的 "),a("code",[t._v("__proto__")]),t._v(" getter/setter 是不安全的。因为用户可能会输入 "),a("code",[t._v('"__proto__"')]),t._v(" 作为键，这会导致一个 error，虽然我们希望这个问题不会造成什么大影响，但通常会造成不可预料的后果。")]),t._v(" "),a("p",[t._v("因此，我们可以使用 "),a("code",[t._v("Object.create(null)")]),t._v(" 创建一个没有 "),a("code",[t._v("__proto__")]),t._v(" 的 “very plain” 对象，或者对此类场景坚持使用 "),a("code",[t._v("Map")]),t._v(" 对象就可以了。")]),t._v(" "),a("p",[t._v("此外，"),a("code",[t._v("Object.create")]),t._v(" 提供了一种简单的方式来浅拷贝一个对象的所有描述符：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" clone "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrototypeOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOwnPropertyDescriptors")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("此外，我们还明确了 "),a("code",[t._v("__proto__")]),t._v(" 是 "),a("code",[t._v("[[Prototype]]")]),t._v(" 的 getter/setter，就像其他方法一样，它位于 "),a("code",[t._v("Object.prototype")]),t._v("。")]),t._v(" "),a("p",[t._v("我们可以通过 "),a("code",[t._v("Object.create(null)")]),t._v(" 来创建没有原型的对象。这样的对象被用作 “pure dictionaries”，对于它们而言，使用 "),a("code",[t._v('"__proto__"')]),t._v(" 作为键是没有问题的。")]),t._v(" "),a("br"),t._v(" "),a("p",[t._v("其他方法：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/keys",target:"_blank",rel:"noopener noreferrer"}},[t._v("Object.keys(obj)"),a("OutboundLink")],1),t._v(" / "),a("a",{attrs:{href:"https://developer.mozilla.org/zh/docs/Web/JavaScript/Reference/Global_Objects/Object/values",target:"_blank",rel:"noopener noreferrer"}},[t._v("Object.values(obj)"),a("OutboundLink")],1),t._v(" / "),a("a",{attrs:{href:"https://developer.mozilla.org/zh/docs/Web/JavaScript/Reference/Global_Objects/Object/entries",target:"_blank",rel:"noopener noreferrer"}},[t._v("Object.entries(obj)"),a("OutboundLink")],1),t._v(" —— 返回一个可枚举的由自身的字符串属性名/值/键值对组成的数组。")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertySymbols",target:"_blank",rel:"noopener noreferrer"}},[t._v("Object.getOwnPropertySymbols(obj)"),a("OutboundLink")],1),t._v(" —— 返回一个由自身所有的 symbol 类型的键组成的数组。")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames",target:"_blank",rel:"noopener noreferrer"}},[t._v("Object.getOwnPropertyNames(obj)"),a("OutboundLink")],1),t._v(" —— 返回一个由自身所有的字符串键组成的数组。")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect/ownKeys",target:"_blank",rel:"noopener noreferrer"}},[t._v("Reflect.ownKeys(obj)"),a("OutboundLink")],1),t._v(" —— 返回一个由自身所有键组成的数组。")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty",target:"_blank",rel:"noopener noreferrer"}},[t._v("obj.hasOwnProperty(key)"),a("OutboundLink")],1),t._v("：如果 "),a("code",[t._v("obj")]),t._v(" 拥有名为 "),a("code",[t._v("key")]),t._v(" 的自身的属性（非继承而来的），则返回 "),a("code",[t._v("true")]),t._v("。")])]),t._v(" "),a("p",[t._v("所有返回对象属性的方法（如 "),a("code",[t._v("Object.keys")]),t._v(" 及其他）—— 都返回“自身”的属性。如果我们想继承它们，我们可以使用 "),a("code",[t._v("for...in")]),t._v("。")]),t._v(" "),a("br"),t._v(" "),a("br"),t._v(" "),a("br")])},[],!1,null,null,null);s.default=n.exports},532:function(t,s,e){t.exports=e.p+"assets/img/object-prototype-2.b45f3265.svg"},533:function(t,s,e){t.exports=e.p+"assets/img/object-prototype-null.6565e265.svg"}}]);