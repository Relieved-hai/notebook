(window.webpackJsonp=window.webpackJsonp||[]).push([[366],{1061:function(s,t,a){"use strict";a.r(t);var e=a(19),n=Object(e.a)({},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"模式（patterns）和修饰符（flags）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模式（patterns）和修饰符（flags）","aria-hidden":"true"}},[s._v("#")]),s._v(" 模式（Patterns）和修饰符（flags）")]),s._v(" "),a("p",[s._v("正则表达式是搜索和替换字符串的一种强大方式。")]),s._v(" "),a("p",[s._v("在 JavaScript 中，正则表达式通过内置的“RegExp”类的对象来实现，并与字符串集成。")]),s._v(" "),a("p",[s._v("请注意，在各编程语言之间，正则表达式是有所不同的。在本教程中，我们只专注于 JavaScript。当然，它们有很多共同点，但在 Perl、Ruby 和 PHP 等语言下会有所不同。")]),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("h2",{attrs:{id:"正则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式","aria-hidden":"true"}},[s._v("#")]),s._v(" 正则表达式")]),s._v(" "),a("p",[s._v("正则表达式（可叫作“regexp”或者“reg”）包含 "),a("strong",[s._v("模式")]),s._v(" 和可选的 "),a("strong",[s._v("修饰符")]),s._v("。")]),s._v(" "),a("p",[s._v("创建一个正则表达式对象有两种语法。")]),s._v(" "),a("p",[s._v("较长一点的语法：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("regexp "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pattern"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"flags"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("…较短一点的语法，使用斜杠 "),a("code",[s._v('"/"')]),s._v("：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("regexp "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/pattern/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 没有修饰符")]),s._v("\nregexp "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/pattern/gmi")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 伴随修饰符 g、m 和 i（后面会讲到）")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("斜杠 "),a("code",[s._v('"/"')]),s._v(" 会告诉 JavaScript 我们正在创建一个正则表达式。它的作用类似于字符串的引号。")]),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("h2",{attrs:{id:"用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用法","aria-hidden":"true"}},[s._v("#")]),s._v(" 用法")]),s._v(" "),a("p",[s._v("如果要在字符串中进行搜索，可以使用 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh/docs/Web/JavaScript/Reference/Global_Objects/String/search",target:"_blank",rel:"noopener noreferrer"}},[s._v("search"),a("OutboundLink")],1),s._v(" 方法。")]),s._v(" "),a("p",[s._v("下面是示例：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"I love JavaScript!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将在这里搜索")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" regexp "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/love/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("regexp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[a("code",[s._v("str.search")]),s._v(" 方法会查找模式 "),a("code",{staticClass:"pattern"},[s._v("/love/")]),s._v("，然后返回匹配项在字符串中的位置。我们可以猜到，"),a("code",{staticClass:"pattern"},[s._v("/love/")]),s._v(" 是最简单的模式。它所做的就是简单的子字符串的查找。")]),s._v(" "),a("p",[s._v("上面的代码等同于：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"I love JavaScript!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将在这里搜索")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" substr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'love'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("substr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("所以搜索 "),a("code",{staticClass:"pattern"},[s._v("/love/")]),s._v(" 与搜索 "),a("code",[s._v('"love"')]),s._v(" 是等价的。")]),s._v(" "),a("p",[s._v("但这只是暂时的。很快我们就会接触更复杂的正则表达式，其搜索功能将更强大。")]),s._v(" "),a("br"),s._v(" "),a("div",{staticClass:"warning custom-block"},[a("p",[a("strong",[s._v("配色")])]),s._v(" "),a("p",[s._v("本文中的配色方案如下：")]),s._v(" "),a("ul",[a("li",[s._v("regexp – "),a("code",{staticClass:"pattern"},[s._v("red")])]),s._v(" "),a("li",[s._v("string（我们要搜索的）-- "),a("code",{staticClass:"subject"},[s._v("blue")])]),s._v(" "),a("li",[s._v("result – "),a("code",{staticClass:"match"},[s._v("green")])])])]),s._v(" "),a("br"),s._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",[a("strong",[s._v("什么时候使用 "),a("code",[s._v("new RegExp")]),s._v("?")])]),s._v(" "),a("p",[s._v("另一方面，"),a("code",[s._v("new RegExp")]),s._v(" 允许从字符串中动态地构造模式。")]),s._v(" "),a("p",[s._v("所以我们可以找出需要搜索的字段，然后根据搜索字段创建 "),a("code",[s._v("new RegExp")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" search "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("prompt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"What you want to search?"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"love"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" regexp "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("search"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 找到用户想要的任何东西")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"I love JavaScript"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("regexp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])])]),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("h2",{attrs:{id:"修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修饰符","aria-hidden":"true"}},[s._v("#")]),s._v(" 修饰符")]),s._v(" "),a("p",[s._v("正则表达式的修饰符可能会影响搜索结果。")]),s._v(" "),a("p",[s._v("在 JavaScript 中，有 6 个修饰符：")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("i")])])]),s._v(" "),a("p",[s._v("使用此修饰符后，搜索时不区分大小写: "),a("code",[s._v("A")]),s._v(" 和 "),a("code",[s._v("a")]),s._v(" 没有区别（具体看下面的例子）。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("g")])])]),s._v(" "),a("p",[s._v("使用此修饰符后，搜索时会查找所有的匹配项，而不只是第一个（在下一章会讲到）。")]),s._v(" "),a("p",[a("strong",[a("code",[s._v("m")])])]),s._v(" "),a("p",[s._v("多行模式（详见章节 "),a("router-link",{attrs:{to:"/learn_javascript_asdiasdkc/three/ioprtymcvzq/05/"}},[s._v('Flag "m" — 多行模式')]),s._v("）。")],1),s._v(" "),a("p",[a("strong",[a("code",[s._v("s")])])]),s._v(" "),a("p",[s._v("它包括 “dotall” 模式，即句号 "),a("code",[s._v(".")]),s._v("，它也可以和 "),a("code",[s._v("\\n")]),s._v(" 换行符匹配（详见章节 "),a("router-link",{attrs:{to:"/learn_javascript_asdiasdkc/three/ioprtymcvzq/02/"}},[s._v("字符类")]),s._v("）。")],1),s._v(" "),a("p",[a("strong",[a("code",[s._v("u")])])]),s._v(" "),a("p",[s._v("开启完整的 unicode 支持。该修饰符能够修正对于代理对的处理。更详细的内容见章节 "),a("router-link",{attrs:{to:"/learn_javascript_asdiasdkc/three/ioprtymcvzq/03/"}},[s._v("Unicode：修饰符 “u” 和 class \\p{...}")]),s._v(" 。")],1),s._v(" "),a("p",[a("strong",[a("code",[s._v("y")])])]),s._v(" "),a("p",[s._v("粘滞模式（详见 "),a("router-link",{attrs:{to:"/learn_javascript_asdiasdkc/three/ioprtymcvzq/17/"}},[s._v("下一章节")]),s._v(" ）")],1),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("h2",{attrs:{id:"“i”修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#“i”修饰符","aria-hidden":"true"}},[s._v("#")]),s._v(" “i”修饰符")]),s._v(" "),a("p",[s._v("最简单的修饰符就是 "),a("code",[s._v("i")]),s._v(" 了。")]),s._v(" "),a("p",[s._v("示例代码如下：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"I love JavaScript!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/LOVE/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// -1（没找到）")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/LOVE/i")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ol",[a("li",[s._v("第一个搜索返回的是 "),a("code",[s._v("-1")]),s._v("（也就是没找到），因为搜索默认是区分大小写的。")]),s._v(" "),a("li",[s._v("使用修饰符 "),a("code",{staticClass:"pattern"},[s._v("/LOVE/i")]),s._v("，在字符串的第 2 个位置上搜索到了 "),a("code",{staticClass:"match"},[s._v("love")]),s._v("。")])]),s._v(" "),a("p",[s._v("相比与简单的子字符串查找，"),a("code",[s._v("i")]),s._v(" 修饰符已经让正则表达式变得更加强大了。但是这还不够。我们会在下一章节讲述其它修饰符和特性。")]),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),a("ul",[a("li",[s._v("一个正则表达式包含模式和可选修饰符："),a("code",[s._v("g")]),s._v("、"),a("code",[s._v("i")]),s._v("、"),a("code",[s._v("m")]),s._v("、"),a("code",[s._v("s")]),s._v("、"),a("code",[s._v("u")]),s._v("、"),a("code",[s._v("y")]),s._v("。")]),s._v(" "),a("li",[s._v("如果不使用我们在后面将要学到的修饰符和特殊标志，正则表达式的搜索就等同于子字符串查找。")]),s._v(" "),a("li",[a("code",[s._v("str.search(regexp)")]),s._v(" 方法返回的是找到的匹配项的索引位置，如果没找到则返回 "),a("code",[s._v("-1")]),s._v("。")])]),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("br")])},[],!1,null,null,null);t.default=n.exports}}]);