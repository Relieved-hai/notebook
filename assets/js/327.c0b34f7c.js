(window.webpackJsonp=window.webpackJsonp||[]).push([[327],{1155:function(s,t,a){"use strict";a.r(t);var e=a(19),n=Object(e.a)({},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"reference-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reference-type","aria-hidden":"true"}},[s._v("#")]),s._v(" Reference Type")]),s._v(" "),a("div",{staticClass:"warning custom-block"},[a("p",[a("strong",[s._v("深入的语言特性")])]),s._v(" "),a("p",[s._v("本文所讲的是一个高阶主题，能帮你更好地理解一些边缘情况。")]),s._v(" "),a("p",[s._v("这仅是锦上添花。许多经验丰富的的开发者不甚了了也过得不错。如果你想了解代码运行的本质，那就继续读下去吧。")])]),s._v(" "),a("p",[s._v("一个动态执行的方法调用可能会丢失 "),a("code",[s._v("this")]),s._v("。")]),s._v(" "),a("p",[s._v("例如：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[s._v(" ")]),a("br")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" user "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"John"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("hi")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bye")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Bye"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nuser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("hi")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 正常运行")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 现在让我们基于 name 来选择调用 user.hi 或 user.bye")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"John"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hi "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("bye"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Error!")]),s._v("\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("在最后一行有个在 "),a("code",[s._v("user.hi")]),s._v(" 和 "),a("code",[s._v("user.bye")]),s._v(" 中做选择的条件（三元）运算符。当前情形下的结果是 "),a("code",[s._v("user.hi")]),s._v("。")]),s._v(" "),a("p",[s._v("接着该方法被通过 "),a("code",[s._v("()")]),s._v(" 立刻调用。但是并不能正常工作！")]),s._v(" "),a("p",[s._v("如你所见，此处调用导致了一个错误，因为在该调用中 "),a("code",[s._v('"this"')]),s._v(" 的值变成了 "),a("code",[s._v("undefined")]),s._v("。")]),s._v(" "),a("p",[s._v("这样是能工作的（对象.方法）：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("hi")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这就无法工作了（被评估的方法）：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"John"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hi "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("bye"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Error!")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("为什么呢？欲知缘何，且让我们深入 "),a("code",[s._v("obj.method()")]),s._v(" 调用运行的本质。")]),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("h2",{attrs:{id:"reference-type-解读"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reference-type-解读","aria-hidden":"true"}},[s._v("#")]),s._v(" Reference type 解读")]),s._v(" "),a("p",[s._v("仔细看的话，我们可能注意到 "),a("code",[s._v("obj.method()")]),s._v(" 语句中的两个操作：")]),s._v(" "),a("ul",[a("li",[a("ol",[a("li",[s._v("首先，点 "),a("code",[s._v("'.'")]),s._v(" 取了属性 "),a("code",[s._v("obj.method")]),s._v(" 的值。")])])]),s._v(" "),a("li",[a("ol",{attrs:{start:"2"}},[a("li",[s._v("接着 "),a("code",[s._v("()")]),s._v(" 执行了它。")])])])]),s._v(" "),a("p",[s._v("那么，"),a("code",[s._v("this")]),s._v(" 的信息是怎么从第一部分传递到第二部分的呢？")]),s._v(" "),a("p",[s._v("如果我们将这些操作放在不同的行，"),a("code",[s._v("this")]),s._v(" 必定是会丢失的：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[s._v(" ")]),a("div",{staticClass:"highlighted"},[s._v(" ")]),a("div",{staticClass:"highlighted"},[s._v(" ")]),a("br")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" user "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"John"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("hi")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 把获取方法和调用方法拆成两行")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" hi "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("hi")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 报错了，因为 this 的值是 undefined")]),s._v("\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("这里 "),a("code",[s._v("hi = user.hi")]),s._v(" 把函数赋值给了一个变量，接下来在最后一行它是完全独立的，所以这里没有 "),a("code",[s._v("this")]),s._v("。")]),s._v(" "),a("p",[a("strong",[s._v("为确保 "),a("code",[s._v("user.hi()")]),s._v(" 调用正常运行，JavaScript 玩了个小把戏 —— 点 "),a("code",[s._v("'.'")]),s._v(" 返回的不是一个函数，而是一个特殊的 "),a("a",{attrs:{href:"https://tc39.es/ecma262/#sec-reference-specification-type",target:"_blank",rel:"noopener noreferrer"}},[s._v("Reference Type"),a("OutboundLink")],1),s._v(" 的值。")])]),s._v(" "),a("p",[s._v("Reference Type 是 ECMA 中的一个“规范类型”。我们不能直接使用它，但它被用在 JavaScript 语言内部。")]),s._v(" "),a("p",[s._v("Reference Type 的值是一个三个值的组合 "),a("code",[s._v("(base, name, strict)")]),s._v("，其中：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("base")]),s._v(" 是对象。")]),s._v(" "),a("li",[a("code",[s._v("name")]),s._v(" 是属性名。")]),s._v(" "),a("li",[a("code",[s._v("strict")]),s._v(" 在 "),a("code",[s._v("use strict")]),s._v(" 模式下为 true。")])]),s._v(" "),a("p",[s._v("对属性 "),a("code",[s._v("user.hi")]),s._v(" 访问的结果不是一个函数，而是一个 Reference Type 的值。对于 "),a("code",[s._v("user.hi")]),s._v("，在严格模式下是：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Reference Type 的值")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hi"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("当 "),a("code",[s._v("()")]),s._v(" 被在 Reference Type 上调用时，它们会接收到关于对象和对象的方法的完整信息，然后可以设置正确的 "),a("code",[s._v("this")]),s._v("（在此处 "),a("code",[s._v("=user")]),s._v("）。")]),s._v(" "),a("p",[s._v("Reference Type 是一个特殊的“中间人”内部类型，目的是从 "),a("code",[s._v(".")]),s._v(" 传递信息给 "),a("code",[s._v("()")]),s._v(" 调用。")]),s._v(" "),a("p",[s._v("任何例如赋值 "),a("code",[s._v("hi = user.hi")]),s._v(" 等其他的操作，都会将 Reference Type 作为一个整体丢弃掉，而会取 "),a("code",[s._v("user.hi")]),s._v("（一个函数）的值并继续传递。所以任何后续操作都“丢失”了 "),a("code",[s._v("this")]),s._v("。")]),s._v(" "),a("p",[s._v("因此，"),a("code",[s._v("this")]),s._v(" 的值仅在函数直接被通过点符号 "),a("code",[s._v("obj.method()")]),s._v(" 或方括号 "),a("code",[s._v("obj['method']()")]),s._v(" 语法（此处它们作用相同）调用时才被正确传递。还有很多种解决这个问题的方式，例如 "),a("router-link",{attrs:{to:"/learn_javascript_asdiasdkc/one/uweiqowjsa/10/"}},[s._v("func.bind()")]),s._v("。")],1),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),a("p",[s._v("Reference Type 是语言内部的一个类型。")]),s._v(" "),a("p",[s._v("读取一个属性，例如在 "),a("code",[s._v("obj.method()")]),s._v(" 中，"),a("code",[s._v(".")]),s._v(" 返回的准确来说不是属性的值，而是一个特殊的 “Reference Type” 值，其中储存着属性的值和它的来源对象。")]),s._v(" "),a("p",[s._v("这是为了随后的方法调用 "),a("code",[s._v("()")]),s._v(" 获取来源对象，然后将 "),a("code",[s._v("this")]),s._v(" 设为它。")]),s._v(" "),a("p",[s._v("对于所有其它操作，Reference Type 会自动变成属性的值（在我们这个情况下是一个函数）。")]),s._v(" "),a("p",[s._v("这整个机制对我们是不可见的。它仅在一些微妙的情况下才重要，例如使用表达式从对象动态地获取一个方法时。")]),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("br")])},[],!1,null,null,null);t.default=n.exports}}]);